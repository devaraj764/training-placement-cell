{"version":3,"sources":["assets/404.svg","assets/career.svg","assets/deva.jpg","assets/tarun.jpg","axios.js","pages/Home.js","components/helpers/Navbar.js","components/helpers/alertModal.js","components/Profile/profileModal.js","components/Profile/ProfileBanner.js","components/Profile/PersonalProfile.js","components/Profile/EducationDetails.js","components/Profile/Skills.js","components/Profile/SocialMedia.js","components/Profile/Hobbies.js","components/Profile/Projects.js","components/Profile/Internships.js","components/Profile/Certifications.js","components/Profile/Achievements.js","components/helpers/useUnsavedChangesWarning.js","components/helpers/Toast.js","components/Profile/index.js","components/Home/index.js","components/Notifications.js","components/helpers/Footer.js","pages/PageNotFound.js","pages/Dashboard.js","components/view-profile/index.js","pages/Admin/login.js","pages/Admin/index.js","pages/LandingPage.js","components/Admin/Notifications.js","components/Admin/StudentList.js","components/Admin/Feedback.js","components/Admin/SendMail.js","pages/TPC_Team.js","App.js","index.js","assets/notification.png","assets/email.png","assets/customer.png","assets/feedback.png"],"names":["module","exports","__webpack_require__","p","uri","console","log","instance","axios","create","baseURL","headers","common","auth-token","localStorage","getItem","Login","props","_useState5","useState","_useState6","Object","slicedToArray","idNo","setidNo","_useState7","_useState8","password","setpassword","_useState9","_useState10","error","seterror","_useState11","_useState12","success","setsuccess","react_default","a","createElement","Fragment","Helmet","style","fontSize","fontWeight","color","textAlign","Form","onSubmit","e","preventDefault","setLoader","post","then","res","callBack","catch","err","response","data","maxWidth","width","InputGroup","className","Text","id","index_esm","FormControl","onChange","target","value","placeholder","aria-label","aria-describedby","type","float","cursor","onClick","message","marginBottom","Button","variant","margin","size","loader","react_router_dom","Color","to","Register","_useState13","_useState14","_useState15","_useState16","name","setname","_useState17","_useState18","setid","_useState19","_useState20","email","setemail","_useState21","_useState22","section","setsection","_useState23","_useState24","dob","setdob","_useState25","_useState26","batch","setbatch","_useState27","_useState28","yearofStudy","setyearofStudy","_useState29","_useState30","contactNum","setcontactNum","_useState31","_useState32","address","setaddress","_useState33","_useState34","_useState35","_useState36","confirmPassword","setconfirmPassword","length","test","String","toLowerCase","contactNumber","imageUrl","hardSkills","softSkills","graduation","loc","cgpa","allcgpa","0","1","2","3","4","5","6","7","Row","Col","md","sm","bi_index_esm","si_index_esm","Select","defaultValue","disabled","fa_index_esm","as","Spinner","animation","withRouter","_useState","location","pathname","_useState2","path","setPath","_useState3","_useState4","useEffect","history","push","routeToDashBoard","setItem","token","minHeight","backgroundImage","api","NavbarNav","_ref","isNew","setisNew","notificationsLength","_React$useState","React","_React$useState2","setActive","window","Navbar","expand","fixed","Container","Brand","Toggle","border","aria-controls","ri_index_esm","Offcanvas","aria-labelledby","placement","Header","closeButton","Body","Nav","Link","href","removeItem","io_index_esm","alignItems","go_index_esm","paddingRight","hi_index_esm","AlertModal","callback","setPristine","show","setshow","Modal","onHide","padding","marginTop","marginRight","setTimeout","replace","ProfileModal","src","setcropimg","setEdit","aspect","crop","setCrop","image","setimage","croppedImg","setcroppedImg","cropped","setcropped","blob","setblob","uploadProfilePicture","_ref2","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","FormData","append","patch","alert","stop","apply","this","arguments","Image","fluid","alt","ReactCrop_min_default","onImageLoaded","newCrop","canvas","document","scaleX","naturalWidth","scaleY","naturalHeight","height","getContext","drawImage","x","y","toDataURL","toBlob","getElementById","edit","handleChanges","logout","profileData","isDirty","profileUrl","setprofileUrl","modal","setmodal","profileModal","setprofileModal","imageSrc","setimageSrc","_handleProfile","uploader","files","abrupt","URL","createObjectURL","concat","display","justifyContent","position","opacity","background","zIndex","marginLeft","ai_index_esm","Control","accept","_x","handleProfile","flexDirection","alertModal","Profile_profileModal","PersonalProfile","updatedProfile","setupdatedProfile","setDirty","privacy","setPrivacy","objectSpread","minWidth","borderRadius","boxShadow","Card","body","Label","htmlFor","bio","rows","EducationDetails","schooling","setschooling","preGraduation","setpreGraduation","setgraduation","updateSchoolingDetails","key","defineProperty","updatepreGraduation","updateGraduation","calculateAverageCgpa","newallCgpa","sum","parseFloat","total","Number","toFixed","passout","Accordion","defaultActiveKey","Item","eventKey","Skills","addNew","setaddNew","sethardSkills","setsoftSkills","level","newskill","setnewskill","tools","newTech","setnewTech","description","newSubject","setnewSubject","newLanguage","setnewLanguage","map","skill","index","title","item","newhardSkills","filter","_","i","deleteHardSkill","undefined","findIndex","changeDescription","flexWrap","changeSkillLevel","changeTools","lg","toConsumableArray","addHardSkill","newsoftSkills","deleteSoftSkill","changeLanguageLevel","addSoftSkill","changeSoftSkill","SocialMedia","setAddNew","newLinks","setnewLinks","link","setlink","links","includes","bs_index_esm","rel","overflow","whiteSpace","textOverflow","l","removeLink","Hobbies","newHobbies","setnewHobbies","hobbie","sethobbie","hobbies","Badge","bg","pill","h","removeHobbie","Projects","projects","setprojects","technologies","newProject","setnewProject","updateProject","project","newProjects","roes","textDecoration","fi_index_esm","Internships","internships","setinternships","role","organization","startDate","endDate","status","certificate","paid","duration","newInternship","setnewInternship","updateInternship","newInternships","internship","_blank","deleteInternship","textAligin","Certifications","certifications","setcertifications","newCertification","setnewCertification","updateCertification","newCertifications","certification","deleteCertification","Achievements","achievements","setAchievements","newAchievement","setnewAchievement","achievement","deleteAchivement","newAchievements","updateAchivement","useUnsavedChangesWarning","setisDirty","onbeforeunload","react_router","when","Toast","children","setShow","Token","setToken","setprofileData","setloader","toast","setToast","search","get","request","Logout","_useUnsavedChangesWar","_useUnsavedChangesWar2","Prompt","tab","setTab","xs","Profile_ProfileBanner","fill","Profile_PersonalProfile","Profile_Hobbies","Profile_SocialMedia","Profile_Skills","Profile_EducationDetails","Profile_Projects","Profile_Internships","Profile_Certifications","Profile_Achievements","helpers_Toast","Home","feedback","setfeedback","username","ListGroup","numbered","Notifications","setData","notifications","notifier","date","Date","AddZero","num","getDate","getMonth","getFullYear","join","getHours","getMinutes","createdAt","ti_index_esm","vsc_index_esm","toUpperCase","centered","Footer","now","PageNotFound","PageNotFoundImg","setusername","setId","setNotifications","_id","helpers_Navbar","exact","render","components_Home","components_Notifications","components_Profile","pages_PageNotFound","helpers_Footer","profile","setProfile","setErr","url","match","params","componentRef","useRef","handlePrint","useReactToPrint","content","current","ref","divor","dataItem","Group","HomePage","reload","NotificationImage","maxHeight","EmailImage","ListStudents","FeedbackImage","Admin_HomePage","CareerLogo","settitle","setdescription","settype","externals","setexternals","settoast","sendMail","setsendMail","sendMails","emails","reqparams","subject","html","required","checked","sendNotification","students","setstudents","filteredStudents","setfilteredStudents","setemails","searchInput","setsearchInput","onKeyUp","student","Table","striped","hover","checkbox","getElementsByName","selectAll","feedbacks","setfeedbacks","setsubject","setbody","mails","setmails","state","trim","TPC_Team","DevaImage","TarunImage","isMobile","useMediaQuery","query","view_profile","pages_Home","pages_TPC_Team","pages_Dashboard","Admin_login","pages_Admin","Admin_Notifications","Admin_StudentList","Feedback","Admin_SendMail","pages_LandingPage","ReactDOM","createRoot","src_App"],"mappings":"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","file":"static/js/main.dd1dc201.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.a47781d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/career.f3fcbb4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/deva.6c3ca574.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tarun.1f25438c.jpg\";","import axios from 'axios';\r\n\r\nexport const uri = process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:5000/api'\r\nconsole.log(uri)\r\n\r\n// myAxios.js\r\nconst instance = axios.create({\r\n    baseURL: uri,\r\n    headers: {\r\n        common: {\r\n            \"auth-token\": localStorage.getItem('admin-token')\r\n        }\r\n    }\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from 'react';\r\nimport { Col, Row, InputGroup, FormControl, Spinner, Button, Form } from 'react-bootstrap';\r\nimport { MdPermIdentity, MdEmail, MdPassword, MdBatchPrediction, MdPhone } from 'react-icons/md';\r\nimport { BiRename } from 'react-icons/bi'\r\nimport { FaBirthdayCake, FaBook } from 'react-icons/fa';\r\nimport { SiGoogleclassroom } from 'react-icons/si';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport axios from '../axios';\r\nimport hardSkills from '../defaults/hardskills.json';\r\nimport softSkills from '../defaults/softskills.json';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nfunction Home(props) {\r\n\r\n    const [path, setPath] = useState(props.location.pathname);\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setPath(props.location.pathname)\r\n        let token = localStorage.getItem('auth-token');\r\n        if (token) {\r\n            props.history.push('/dashboard');\r\n        }\r\n    }, [props.location.pathname, props.history]);\r\n\r\n    const routeToDashBoard = (res) => {\r\n        props.history.push({\r\n            pathname: '/dashboard',\r\n        })\r\n        localStorage.setItem('auth-token', res.data.token);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"Home\" style={{ minHeight: '100vh', backgroundImage: \"url('https://img.freepik.com/free-vector/white-abstract-background_23-2148810113.jpg?w=2000')\" }}>\r\n                <Col className=\"right-side\" sm={12}>\r\n                    {/* <Image src={TPCLogo} fluid={true} style={{ maxHeight: '300px', marginBottom: '30px' }} /> */}\r\n                    {path === '/login' ? <Login loader={loader} setLoader={setLoader} callBack={routeToDashBoard} api={props.api} /> : <Register loader={loader} setLoader={setLoader} callBack={routeToDashBoard} api={props.api} />}\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Login(props) {\r\n    const [idNo, setidNo] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [error, seterror] = useState('');\r\n    const [success, setsuccess] = useState('');\r\n\r\n    function submit(e) {\r\n        e.preventDefault();\r\n        if (idNo === '' || password === '') {\r\n            seterror('Fill all empty fields')\r\n        } else {\r\n            seterror('')\r\n            loginUser();\r\n        }\r\n    }\r\n\r\n    function loginUser() {\r\n        props.setLoader(true);\r\n        setsuccess('')\r\n        const url = '/auth/login'\r\n        axios.post(url, {\r\n            \"idNo\": idNo,\r\n            \"password\": password,\r\n        }).then(res => {\r\n            props.callBack(res);\r\n            props.setLoader(false);\r\n        }).catch(err => {\r\n            if (err) {\r\n                seterror(err.response.data.error);\r\n                props.setLoader(false);\r\n            }\r\n        })\r\n    }\r\n\r\n    const forgotPassword = () => {\r\n        if (idNo === '') {\r\n            seterror('Enter your idNo')\r\n        } else {\r\n            axios.post('/auth/forgot-password', {\r\n                \"idNo\": idNo,\r\n            }).then(res => {\r\n                seterror('')\r\n                setsuccess(res.data.message)\r\n            }).catch(err => {\r\n                // console.log(err)\r\n                seterror(err.response.data.message)\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Student Login | TPC</title>\r\n            </Helmet>\r\n            <p style={{ fontSize: '40px', fontWeight: 'bold' }}>Hello Again!</p>\r\n            <p style={{ color: 'grey', textAlign: 'center', fontSize: '14px' }}>Hey, Enter your credentials to get login to your account..</p>\r\n            <br />\r\n            <Form onSubmit={submit} style={{ maxWidth: '400px', width: '100%' }}>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"basic-addon1\"><MdPermIdentity /></InputGroup.Text>\r\n                    <FormControl\r\n                        onChange={(e) => setidNo(e.target.value)}\r\n                        placeholder=\"Student Id\"\r\n                        aria-label=\"Student Id\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                    />\r\n                </InputGroup>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Text id=\"basic-addon2\"><MdPassword /></InputGroup.Text>\r\n                    <FormControl\r\n                        type=\"password\"\r\n                        onChange={(e) => setpassword(e.target.value)}\r\n                        placeholder=\"Password\"\r\n                        aria-label=\"Password\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                    />\r\n                </InputGroup>\r\n                <div style={{ maxWidth: '400px', width: '100%' }}>\r\n                    <p style={{ float: 'right', fontSize: '14px', cursor: 'pointer' }} onClick={forgotPassword}>Forgot Password?</p>\r\n                </div>\r\n                {error === '' ? null : <p style={{ color: 'red', fontSize: '14px', marginBottom: '10px' }}>{error}</p>}\r\n                {success === '' ? null : <p style={{ color: 'green', fontSize: '14px' }}>{success}</p>}\r\n                <Button variant='primary' style={{ width: '100%', margin: 0 }} size=\"lg\" type='submit'>\r\n                    {\r\n                        props.loader ?\r\n                            'please wait...' : \"Login\"\r\n                    }\r\n                </Button>\r\n            </Form>\r\n            <br />\r\n            <p>Don't have account? <Link style={{ Color: '#625bf6', cursor: 'pointer', fontSize: '16px', fontWeight: '600' }} to=\"/register\">SignUp</Link></p>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Register(props) {\r\n    const [error, seterror] = useState('');\r\n    const [name, setname] = useState('');\r\n    const [id, setid] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [section, setsection] = useState('');\r\n    const [dob, setdob] = useState('');\r\n    const [batch, setbatch] = useState('');\r\n    const [yearofStudy, setyearofStudy] = useState('');\r\n    const [contactNum, setcontactNum] = useState('');\r\n    const [address, setaddress] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [confirmPassword, setconfirmPassword] = useState('');\r\n\r\n    function validateEmail() {\r\n        var re = /^[a-z0-9](\\.?[a-z0-9]){5,}@r(oogle)?guktsklm\\.ac.in$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    function submit(e) {\r\n        e.preventDefault();\r\n        if (name === '' || id === '' || email === '' || section === '' || dob === '' || batch === '' || yearofStudy === '' || address === '' || contactNum === '' || password === '' || confirmPassword === '') {\r\n            seterror('Fill all empty fields!!!')\r\n        } else if (name.length < 3) {\r\n            seterror('Name should contain at least 3 characters');\r\n        } else if (id.length < 7) {\r\n            seterror('Student ID shoudl contain at least 7 characters, it must look like (SXXXXXX)');\r\n        } else if (!validateEmail(email)) {\r\n            seterror('Enter a valid email address')\r\n        } else if (password !== confirmPassword) {\r\n            seterror('Password and confirm password does not matched')\r\n        }\r\n        else {\r\n            seterror('');\r\n            registerUser();\r\n        }\r\n    }\r\n\r\n    function registerUser() {\r\n        props.setLoader(true);\r\n        const url = '/auth/register'\r\n        axios.post(url, {\r\n            \"name\": name,\r\n            \"idNo\": id,\r\n            \"email\": email,\r\n            \"section\": section,\r\n            \"batch\": batch,\r\n            \"dob\": dob,\r\n            \"yearofStudy\": yearofStudy,\r\n            \"address\": address,\r\n            \"contactNumber\": contactNum,\r\n            \"password\": password,\r\n            \"imageUrl\": null,\r\n            \"hardSkills\": hardSkills,\r\n            \"softSkills\": softSkills,\r\n            \"graduation\": {\r\n                \"name\": \"\",\r\n                \"loc\": \"\",\r\n                \"cgpa\": \"\",\r\n                \"allcgpa\": {\r\n                    0: 0,\r\n                    1: 0,\r\n                    2: 0,\r\n                    3: 0,\r\n                    4: 0,\r\n                    5: 0,\r\n                    6: 0,\r\n                    7: 0,\r\n                }\r\n            }\r\n        }).then(res => {\r\n            props.callBack(res)\r\n            props.setLoader(false);\r\n        }).catch(err => {\r\n            if (err) {\r\n                seterror(err.response.data.error)\r\n                props.setLoader(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Student Registration | TPC</title>\r\n            </Helmet>\r\n            <p style={{ fontSize: '40px', fontWeight: 'bold' }}>Student Registration Form</p>\r\n            <br />\r\n            <Form onSubmit={submit}>\r\n                <Row style={{ maxWidth: '756px' }}>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\"><BiRename /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => setname(e.target.value)}\r\n                                type='text'\r\n                                placeholder=\"Full Name\"\r\n                                aria-label=\"Full name\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon3\"><MdPermIdentity /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => setid(e.target.value)}\r\n                                type='text'\r\n                                placeholder=\"ID Number\"\r\n                                aria-label=\"idnumber\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon3\"><MdEmail /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => setemail(e.target.value)}\r\n                                type='email'\r\n                                placeholder=\"Email\"\r\n                                aria-label=\"email\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon3\"><SiGoogleclassroom /></InputGroup.Text>\r\n                            <Form.Select\r\n                                onChange={(e) => setsection(e.target.value)}\r\n                                defaultValue=\"section\"\r\n                            >\r\n                                <option disabled>section</option>\r\n                                <option value=\"A\">A</option>\r\n                                <option value=\"B\">B</option>\r\n                                <option value=\"C\">C</option>\r\n                                <option value=\"D\">D</option>\r\n                                <option value=\"E\">E</option>\r\n                                <option value=\"F\">F</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon3\"><FaBirthdayCake /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => setdob(e.target.value)}\r\n                                type='date'\r\n                                name=\"date\"\r\n                                placeholder=\"Date of Birth\"\r\n                                aria-label=\"dob\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon3\"><MdBatchPrediction /></InputGroup.Text>\r\n                            <Form.Select\r\n                                onChange={(e) => setbatch(e.target.value)}\r\n                                defaultValue=\"batch\"\r\n                            >\r\n                                <option disabled>batch</option>\r\n                                <option value=\"2017\">2017</option>\r\n                                <option value=\"2018\">2018</option>\r\n                                <option value=\"2019\">2019</option>\r\n                                <option value=\"2020\">2020</option>\r\n                                <option value=\"2021\">2021</option>\r\n                                <option value=\"2022\">2022</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon3\"><FaBook /></InputGroup.Text>\r\n                            <Form.Select\r\n                                onChange={(e) => setyearofStudy(e.target.value)}\r\n                                defaultValue=\"year of study\"\r\n                            >\r\n                                <option disabled> year of study</option>\r\n                                <option value=\"E3\">E3</option>\r\n                                <option value=\"E4\">E4</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\" >\r\n                            <InputGroup.Text id=\"basic-addon3\"><MdPhone /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => setcontactNum(e.target.value)}\r\n                                type='text'\r\n                                placeholder=\"Contact Number\"\r\n                                aria-label=\"number\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                onChange={(e) => setaddress(e.target.value)}\r\n                                as='textarea'\r\n                                type='text'\r\n                                placeholder=\"Address\"\r\n                                aria-label=\"Address\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon2\"><MdPassword /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => setpassword(e.target.value)}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                aria-label=\"Password\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon2\"><MdPassword /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => setconfirmPassword(e.target.value)}\r\n                                type='password'\r\n                                placeholder=\"Confirm password\"\r\n                                aria-label=\"Consirm password\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <center>\r\n                    {error === '' ? null : <p style={{ color: 'red', fontSize: '14px'}}>{error}</p>}\r\n                    <Button type=\"submit\" variant=\"primary\" style={{ maxWidth: '400px', width: '100%', marginBottom:'20px' }} size=\"lg\">{props.loader ? <Spinner animation=\"border\" size='sm' /> : \"Proceed\"}</Button>\r\n                    <br />\r\n                    <p>Already had account? <Link style={{ color: '#625bf6', cursor: 'pointer', fontSize: '16px', fontWeight: '600' }} to=\"/login\">SignIn</Link></p>\r\n                </center>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(Home);","import React, { useEffect } from 'react';\r\nimport { Container, Navbar, Nav, Offcanvas } from 'react-bootstrap';\r\nimport { IoMdNotifications } from 'react-icons/io';\r\nimport { HiUserCircle } from 'react-icons/hi';\r\nimport { MdHome } from 'react-icons/md';\r\nimport { RiMenu4Line } from 'react-icons/ri'\r\nimport { GoPrimitiveDot } from 'react-icons/go'\r\n\r\nconst NavbarNav = ({ isNew, setisNew, notificationsLength }) => {\r\n    const [active, setActive] = React.useState('/dashboard');\r\n\r\n    useEffect(() => {\r\n        setActive(window.location.pathname);\r\n    }, [])\r\n\r\n    const updateNew = () => {\r\n        setisNew(false);\r\n        localStorage.removeItem('notifications')\r\n        localStorage.setItem('notifications', notificationsLength)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar expand='md' className=\"navbar\" variant=\"light\" fixed=\"top\">\r\n                <Container>\r\n                    <Navbar.Brand className=\"title\">Dashboard</Navbar.Brand>\r\n                    <Navbar.Toggle style={{ border: 'none' }} aria-controls='offcanvasNavbar-expand-md'><RiMenu4Line size={28} /></Navbar.Toggle>\r\n                    <Navbar.Offcanvas\r\n                        id='offcanvasNavbar-expand-md'\r\n                        aria-labelledby='offcanvasNavbarLabel-expand-md'\r\n                        placement=\"end\"\r\n                    >\r\n                        <Offcanvas.Header closeButton>\r\n                        </Offcanvas.Header>\r\n                        <Offcanvas.Body>\r\n                            <Nav className=\"justify-content-end flex-grow-1 pe-3\">\r\n                                <Nav.Link href=\"/dashboard\" ><MdHome size={18} />&nbsp;&nbsp;Home</Nav.Link>\r\n                                <Nav.Link href=\"/dashboard/notifications\" onClick={isNew ? updateNew : null}><IoMdNotifications size={18} />&nbsp;&nbsp;{isNew ? <span style={{ alignItems: 'center' }}>Notifications <GoPrimitiveDot style={{ color: '#625bf6' }} size={18} /></span> : 'Notifications'}</Nav.Link>\r\n                                <Nav.Link href=\"/dashboard/profile\" style={{ paddingRight: '0' }}><HiUserCircle size={18} />&nbsp;&nbsp;Profile</Nav.Link>\r\n                            </Nav>\r\n                        </Offcanvas.Body>\r\n                    </Navbar.Offcanvas>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavbarNav","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button } from 'react-bootstrap'\r\n\r\nconst AlertModal = ({ value, callback, setPristine }) => {\r\n    const [show, setshow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (value === true) {\r\n            setshow(true)\r\n        }\r\n    }, [value]);\r\n\r\n    const reloadPage = () => {\r\n        setPristine();\r\n        setshow(false);\r\n        callback(false);\r\n        setTimeout(() => {\r\n            window.location.replace('/dashboard/profile');\r\n        }, 500)\r\n    }\r\n    return (\r\n\r\n        <div>\r\n            <Modal show={show} onHide={() => setshow(false)}>\r\n                <div style={{ padding: '20px' }}>\r\n                    <h6>You have unsaved changes, Are you sure want to cancel?</h6>\r\n                    <div style={{ float: 'right', marginTop: '20px' }}>\r\n                        <Button variant=\"outline-primary\" onClick={() => { setshow(false); callback(false) }} style={{ marginRight: '20px' }}>No</Button>\r\n                        <Button variant='primary' onClick={reloadPage}>Yes</Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AlertModal;","import React, { useState, useEffect } from 'react';\r\nimport { Modal, Button, Image, Row, Col } from 'react-bootstrap';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport axios from '../../axios';\r\n\r\nconst ProfileModal = ({ src, value, callback, setcropimg, setEdit, history }) => {\r\n    const [show, setshow] = useState(false);\r\n\r\n    const [crop, setCrop] = useState({ aspect: 1 / 1 });\r\n    const [image, setimage] = useState(null);\r\n    const [croppedImg, setcroppedImg] = useState(null);\r\n    const [cropped, setcropped] = useState(false);\r\n    const [blob, setblob] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setshow(value)\r\n    }, [value]);\r\n\r\n    function getCroppedImg() {\r\n        const canvas = document.createElement('canvas');\r\n        const scaleX = image.naturalWidth / image.width;\r\n        const scaleY = image.naturalHeight / image.height;\r\n        canvas.width = crop.width;\r\n        canvas.height = crop.height;\r\n        const ctx = canvas.getContext('2d');\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            crop.x * scaleX,\r\n            crop.y * scaleY,\r\n            crop.width * scaleX,\r\n            crop.height * scaleY,\r\n            0,\r\n            0,\r\n            crop.width,\r\n            crop.height,\r\n        );\r\n\r\n        if (canvas.width !== 0 || canvas.height !== 0) {\r\n            // As dataURL\r\n            let src = canvas.toDataURL('image/jpeg');\r\n            canvas.toBlob(blob => {\r\n                setblob(blob)\r\n            }, \"image/jpeg\");\r\n            setcroppedImg(src);\r\n            setcropped(true);\r\n        } else { window.alert('Please crop the image correctly ... 😇 ') }\r\n    }\r\n\r\n    const uploadProfilePicture = async () => {\r\n        if (cropped) {\r\n            const url = '/students'\r\n            const data = new FormData();\r\n            data.append('imageUrl', blob)\r\n            await axios.patch(url, data, {\r\n                headers: {\r\n                    \"auth-token\": localStorage.getItem('auth-token')\r\n                }\r\n            })\r\n                .then((res) => {\r\n                    callback(false);\r\n                    setshow(false);\r\n                    setEdit(false)\r\n                    setcropimg(croppedImg);\r\n                    setcroppedImg(null)\r\n                    history.push('/dashboard/profile');\r\n                })\r\n                .catch((err) => console.log(err))\r\n        } else { window.alert('Please crop the image correctly ... 😇 ') }\r\n    }\r\n\r\n    const cancelUpload = () => {\r\n        setshow(false);\r\n        callback(false);\r\n        setcroppedImg(null)\r\n        document.getElementById('imageInput').value = ''\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal show={show}>\r\n                <div style={{ padding: '20px', marginTop: '10px' }}>\r\n                    <h6>Do you want to make this as your profile picture?</h6><br />\r\n                    {\r\n                        croppedImg ?\r\n                            <>\r\n                                <center>\r\n                                    <Image src={croppedImg} fluid alt=\"Result\" style={{ width: '100%' }} />\r\n                                    <br />\r\n                                    <Button variant='primary' style={{ width: '200px', marginTop: '20px' }} onClick={() => setcroppedImg(null)}>Recrop</Button>\r\n                                </center>\r\n                            </>\r\n                            :\r\n                            <center>\r\n                                <ReactCrop src={src} onImageLoaded={setimage} crop={crop} onChange={newCrop => setCrop(newCrop)} />\r\n                                <br />\r\n                                <Button variant='outline-primary' style={{ width: '200px', marginTop: '20px' }} onClick={getCroppedImg}>Crop</Button>\r\n                            </center>\r\n                    }\r\n                    <Row style={{ marginTop: '50px' }}>\r\n                        <Col>\r\n                            <Button variant=\"-primary\" style={{ width: '100%' }} onClick={cancelUpload}>No</Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button variant='primary' style={{ width: '100%' }} onClick={uploadProfilePicture}>Yes</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileModal;","import { Image, Button, Form, Spinner } from 'react-bootstrap';\r\nimport { AiOutlineCamera } from 'react-icons/ai'\r\nimport React, { useState, useEffect } from 'react';\r\nimport AlertModal from '../helpers/alertModal';\r\nimport ProfileModal from './profileModal';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { uri } from '../../axios'\r\n\r\nconst ProfileBanner = ({ setEdit, edit, handleChanges, logout, profileData, loader, isDirty, setPristine, history }) => {\r\n\r\n    const [profileUrl, setprofileUrl] = useState('');\r\n    const [modal, setmodal] = useState(false);\r\n\r\n    const [profileModal, setprofileModal] = useState(false);\r\n    const [imageSrc, setimageSrc] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setprofileUrl(profileData ? profileData.imageUrl ? `${uri}${profileData.imageUrl}` : 'https://t4.ftcdn.net/jpg/00/65/77/27/360_F_65772719_A1UV5kLi5nCEWI0BNLLiFaBPEkUbv5Fv.jpg' : 'https://t4.ftcdn.net/jpg/00/65/77/27/360_F_65772719_A1UV5kLi5nCEWI0BNLLiFaBPEkUbv5Fv.jpg');\r\n    }, [profileData]);\r\n\r\n    async function handleProfile(uploader) {\r\n        if (uploader.target.files[0].size > 2000000) {\r\n            alert('Profile Image size should be less than 2mb');\r\n            return;\r\n        }\r\n        setimageSrc(URL.createObjectURL(uploader.target.files[0]))\r\n        setprofileModal(true)\r\n    }\r\n\r\n    const cancelChanges = () => {\r\n        if (isDirty) {\r\n            setmodal(true);\r\n        } else {\r\n            history.push('/dashboard/profile');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='profile-banner'>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <div className='imageUpload'>\r\n                    <Image fluid src={profileUrl}\r\n                        alt=\"profile image\" className=\"profileImage\" style={{ position: 'relative', opacity: edit ? '0.7' : '1' }} />\r\n                    {edit ?\r\n                        <div style={{ position: 'absolute', background: 'transparent', opacity: '0.5', zIndex: '2', marginTop: '-60px', marginLeft: '45px' }}>\r\n                            <AiOutlineCamera size={25} />\r\n                        </div>\r\n                        : null}\r\n                    {edit ? <Form.Control type='file' id=\"imageInput\" accept=\"image/*\" onChange={(e) => handleProfile(e)} style={{ position: 'absolute', opacity: '0', marginTop: '-100px', height: \"100px\", width: '100px' }} /> : null}\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                    {edit ?\r\n                        <>\r\n                            <Button variant=\"primary\" onClick={() => handleChanges()} size='sm'>{loader ? <Spinner animation=\"border\" size='sm' /> : 'Save changes'}</Button>\r\n                            <Button variant=\"light\" onClick={cancelChanges} size='sm'>Cancel</Button>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <Button variant=\"primary\" size='sm' onClick={() => history.push('/dashboard/profile?edit=true')} >Edit</Button>\r\n                            <Button variant=\"outline-primary\" size='sm' onClick={logout}>Logout</Button>\r\n                        </>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <AlertModal value={modal} callback={setmodal} setPristine={setPristine} />\r\n            <ProfileModal src={imageSrc} value={profileModal} callback={setprofileModal} setcropimg={setprofileUrl} setEdit={setEdit} history={history} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ProfileBanner)","import React, { useEffect } from 'react'\r\nimport { Row, Col, Card, Form, InputGroup, FormControl } from 'react-bootstrap';\r\nimport { MdPermIdentity, MdEmail, MdBatchPrediction, MdPhone } from 'react-icons/md';\r\nimport { BiRename, BiShowAlt, BiHide } from 'react-icons/bi'\r\nimport { FaBirthdayCake, FaBook } from 'react-icons/fa';\r\nimport { SiGoogleclassroom } from 'react-icons/si';\r\n\r\nconst PersonalProfile = ({ edit, profileData, updatedProfile, setupdatedProfile, setDirty }) => {\r\n\r\n    const [privacy, setPrivacy] = React.useState(profileData.privacy);\r\n\r\n    useEffect(() => {\r\n        setupdatedProfile({ ...updatedProfile, privacy: privacy });\r\n    }, [privacy])\r\n\r\n    return (\r\n        <div className=\"personal-details\">\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: 'fit-content' }}>\r\n                <div style={{ margin: '0px' }}>\r\n                    <p className=\"heading\">Personal Details</p>\r\n                    <p className=\"message\">Update your photo and personal details here</p>\r\n                </div>\r\n                {edit ?\r\n                    privacy ?\r\n                        <p onClick={() => { setPrivacy(false); setDirty(); }} style={{ minWidth: '100px', borderRadius: '10px', boxShadow: 'none', display: 'flex', alignItems: 'center', fontWeight: 'bold', fontSize: '16px', cursor: 'pointer', color: 'gray' }} size='sm'><BiHide size={18} /> &nbsp;  Private</p>\r\n                        : <p onClick={() => { setPrivacy(true); setDirty(); }} style={{ minWidth: '100px', borderRadius: '10px', boxShadow: 'none', display: 'flex', alignItems: 'center', fontWeight: 'bold', fontSize: '16px', cursor: 'pointer' }} size='sm'><BiShowAlt size={18} /> &nbsp; Public</p>\r\n                    : null\r\n                }\r\n            </div>\r\n            <Card body style={{ padding: '10px', fontSize: '14px' }}>\r\n                <Row>\r\n                    <Col md={6} sm={12}>\r\n                        <Form.Label htmlFor=\"fullname\" className=\"label\">Full Name</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\"><BiRename /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => { setupdatedProfile({ ...updatedProfile, name: e.target.value }); setDirty() }}\r\n                                type='text'\r\n                                defaultValue={profileData.name}\r\n                                placeholder=\"Full Name\"\r\n                                aria-label=\"idnumber\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <Form.Label htmlFor=\"studentid\" className=\"label\">Student ID</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\"><MdPermIdentity /></InputGroup.Text>\r\n                            <FormControl\r\n                                type='text'\r\n                                defaultValue={profileData.idNo}\r\n                                placeholder=\"Id Number\"\r\n                                aria-label=\"studentid\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <Form.Label htmlFor=\"email\" className=\"label\">Email</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\"><MdEmail /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => { setupdatedProfile({ ...updatedProfile, email: e.target.value }) }}\r\n                                type='text'\r\n                                defaultValue={profileData.email}\r\n                                placeholder=\"collage email address\"\r\n                                aria-label=\"collageemail\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <Form.Label htmlFor=\"classcode\" className=\"label\">Section Code</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\"><SiGoogleclassroom /></InputGroup.Text>\r\n                            <Form.Select\r\n                                onChange={(e) => { setupdatedProfile({ ...updatedProfile, section: e.target.value }); setDirty() }}\r\n                                type='text'\r\n                                defaultValue={profileData.section ? profileData.section : '-- select --'}\r\n                                placeholder=\"section code\"\r\n                                aria-label=\"sectioncode\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            >\r\n                                <option disabled>-- select --</option>\r\n                                <option value=\"A\">A</option>\r\n                                <option value=\"B\">B</option>\r\n                                <option value=\"C\">C</option>\r\n                                <option value=\"D\">D</option>\r\n                                <option value=\"E\">E</option>\r\n                                <option value=\"F\">F</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <Form.Label htmlFor=\"dob\" className=\"label\">Date of Birth</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\"><FaBirthdayCake /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => { setupdatedProfile({ ...updatedProfile, dob: e.target.value }); setDirty() }}\r\n                                type='date'\r\n                                defaultValue={profileData.dob}\r\n                                placeholder=\"Enter your date of birth\"\r\n                                aria-label=\"dob\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <Form.Label htmlFor=\"batch\" className=\"label\">Batch</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\"><MdBatchPrediction /></InputGroup.Text>\r\n                            <Form.Select\r\n                                onChange={(e) => { setupdatedProfile({ ...updatedProfile, batch: e.target.value }); setDirty() }}\r\n                                type='text'\r\n                                defaultValue={profileData.batch ? profileData.batch : '-- select --'}\r\n                                placeholder=\"Enter your bacth\"\r\n                                aria-label=\"batch\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            >\r\n                                <option disabled>-- select --</option>\r\n                                <option value=\"2017\">2017</option>\r\n                                <option value=\"2018\">2018</option>\r\n                                <option value=\"2019\">2019</option>\r\n                                <option value=\"2020\">2020</option>\r\n                                <option value=\"2021\">2021</option>\r\n                                <option value=\"2022\">2022</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <Form.Label htmlFor=\"yearofstudy\" className=\"label\">Year of Study</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\"><FaBook /></InputGroup.Text>\r\n                            <Form.Select\r\n                                onChange={(e) => { setupdatedProfile({ ...updatedProfile, yearofStudy: e.target.value }); setDirty() }}\r\n                                type='text'\r\n                                defaultValue={profileData.yearofStudy ? profileData.yearofStudy : '-- select --'}\r\n                                placeholder=\"Enter your year of study\"\r\n                                aria-label=\"yearofstudy\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            >\r\n                                <option disabled>-- select --</option>\r\n                                <option value=\"E3\">E3</option>\r\n                                <option value=\"E4\">E4</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <Form.Label htmlFor=\"contactNumber\" className=\"label\">Contact Number</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\"><MdPhone /></InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => { setupdatedProfile({ ...updatedProfile, contactNumber: e.target.value }); setDirty() }}\r\n                                type='text'\r\n                                defaultValue={profileData.contactNumber}\r\n                                placeholder=\"Enter your contact number\"\r\n                                aria-label=\"contactNumber\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                        <Form.Label htmlFor=\"contactNumber\" className=\"label\">Address</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                onChange={(e) => { setupdatedProfile({ ...updatedProfile, address: e.target.value }); setDirty() }}\r\n                                as='textarea'\r\n                                type='text'\r\n                                defaultValue={profileData.address}\r\n                                placeholder=\"Address\"\r\n                                aria-label=\"Address\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n            <Card body style={{ padding: '10px', fontSize: '14px', marginTop: '5px' }}>\r\n                <Form.Label htmlFor=\"bio\" className=\"label\">Bio</Form.Label>\r\n                <FormControl\r\n                    defaultValue={profileData.bio}\r\n                    onChange={(e) => { setupdatedProfile({ ...updatedProfile, bio: e.target.value }); setDirty() }}\r\n                    as='textarea'\r\n                    rows='5'\r\n                    id=\"bio\"\r\n                    placeholder=\"Briefly describe yourself...\"\r\n                    disabled={!edit}\r\n                />\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalProfile;","import React, { useState } from 'react'\r\nimport { Row, Col, Card, Form, InputGroup, FormControl, Accordion } from 'react-bootstrap';\r\n\r\nconst EducationDetails = ({ edit, profileData, updatedProfile, setupdatedProfile, setDirty }) => {\r\n    const [schooling, setschooling] = useState(profileData ? profileData.schooling : null);\r\n    const [preGraduation, setpreGraduation] = useState(profileData ? profileData.preGraduation : null);\r\n    const [graduation, setgraduation] = useState(profileData ? profileData.graduation : null);\r\n\r\n    const updateSchoolingDetails = (key, value) => {\r\n        setDirty();\r\n        setschooling({ ...schooling, [key]: value });\r\n        setupdatedProfile({ ...updatedProfile, schooling: { ...schooling, [key]: value } });\r\n    }\r\n\r\n    const updatepreGraduation = (key, value) => {\r\n        setDirty();\r\n        setpreGraduation({ ...preGraduation, [key]: value });\r\n        setupdatedProfile({ ...updatedProfile, preGraduation: { ...preGraduation, [key]: value } });\r\n    }\r\n\r\n    const updateGraduation = (key, value) => {\r\n        setDirty();\r\n        setgraduation({ ...graduation, [key]: value });\r\n        setupdatedProfile({ ...updatedProfile, graduation: { ...graduation, [key]: value } });\r\n    }\r\n\r\n    const calculateAverageCgpa = (key, value) => {\r\n        setDirty();\r\n        let newallCgpa = { ...graduation.allcgpa, [key]: value };\r\n        let sum = parseFloat(\"0.0\");\r\n        for (let key in newallCgpa) {\r\n            sum += parseFloat(newallCgpa[key]);\r\n        }\r\n        let total = sum / 8;\r\n        setgraduation({ ...graduation, allcgpa: { ...graduation.allcgpa, [key]: value }, cgpa: Number((total).toFixed(1)) });\r\n        setupdatedProfile({ ...updatedProfile, graduation: { ...graduation, allcgpa: { ...graduation.allcgpa, [key]: value }, cgpa: Number((total).toFixed(1)) } })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"educational-details\">\r\n            <p className=\"heading\">Educational Details</p>\r\n            <p className=\"message\">Update your educational details here</p>\r\n            {/* School Details  */}\r\n            <Card body style={{ padding: '10px' }}>\r\n                <p className=\"sub-heading\">Schooling</p>\r\n                <Row>\r\n                    <Col sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">at</InputGroup.Text>\r\n                            <FormControl\r\n                                onChange={(e) => updateSchoolingDetails('name', e.target.value)}\r\n                                value={schooling.name}\r\n                                placeholder=\"School Name\"\r\n                                aria-label=\"SchoolName\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                id=\"schoolName\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">Passed Out</InputGroup.Text>\r\n                            <Form.Select value={schooling.passout || schooling.passout !== '' ? schooling.passout : 'Year'} id=\"passout\" aria-label=\"Default select example\" disabled={!edit} onChange={(e) => updateSchoolingDetails('passout', e.target.value)}>\r\n                                <option disabled>Year</option>\r\n                                <option value=\"2016\">2016</option>\r\n                                <option value=\"2017\">2017</option>\r\n                                <option value=\"2018\">2018</option>\r\n                                <option value=\"2019\">2019</option>\r\n                                <option value=\"2020\">2020</option>\r\n                                <option value=\"2021\">2021</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">CGPA</InputGroup.Text>\r\n                            <FormControl\r\n                                id=\"cgpa\"\r\n                                value={schooling.cgpa}\r\n                                onChange={(e) => updateSchoolingDetails('cgpa', e.target.value)}\r\n                                placeholder=\"Your 10th CGPA\"\r\n                                aria-label=\"SchoolName\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                id=\"location\"\r\n                                onChange={(e) => updateSchoolingDetails('loc', e.target.value)}\r\n                                as='textarea'\r\n                                value={schooling.loc}\r\n                                placeholder=\"Your school address\"\r\n                                aria-label=\"address\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n\r\n            {/* collage details  */}\r\n            <Card body style={{ padding: '10px', marginTop: '5px' }}>\r\n                <p className=\"sub-heading\">Pre University</p>\r\n                <Row>\r\n                    <Col sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">at</InputGroup.Text>\r\n                            <FormControl\r\n                                value={preGraduation.name}\r\n                                onChange={(e) => updatepreGraduation('name', e.target.value)}\r\n                                placeholder=\"University Name\"\r\n                                aria-label=\"University name\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">Passed Out</InputGroup.Text>\r\n                            <Form.Select aria-label=\"Default select example\" disabled={!edit} value={preGraduation.passout || preGraduation.passout !== '' ? preGraduation.passout : 'Year'} onChange={(e) => updatepreGraduation('passout', e.target.value)}>\r\n                                <option disabled>Year</option>\r\n                                <option value=\"2016\">2016</option>\r\n                                <option value=\"2017\">2017</option>\r\n                                <option value=\"2018\">2018</option>\r\n                                <option value=\"2019\">2019</option>\r\n                                <option value=\"2020\">2020</option>\r\n                                <option value=\"2021\">2021</option>\r\n                            </Form.Select>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col md={6} sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">CGPA</InputGroup.Text>\r\n                            <FormControl\r\n                                value={preGraduation.cgpa}\r\n                                onChange={(e) => updatepreGraduation('cgpa', e.target.value)}\r\n                                placeholder=\"Overall CGPA\"\r\n                                aria-label=\"SchoolName\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                as='textarea'\r\n                                value={preGraduation.loc}\r\n                                onChange={(e) => updatepreGraduation('loc', e.target.value)}\r\n                                placeholder=\"Address of University\"\r\n                                aria-label=\"address\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n\r\n            {/* Grauation details */}\r\n            <Card body style={{ padding: '10px', marginTop: '5px' }}>\r\n                <p className=\"sub-heading\">Graduation</p>\r\n                <Row>\r\n                    <Col sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">at</InputGroup.Text>\r\n                            <FormControl\r\n                                value={graduation.name}\r\n                                onChange={(e) => updateGraduation('name', e.target.value)}\r\n                                placeholder=\"University Name\"\r\n                                aria-label=\"University name\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                    {edit ?\r\n                        <Col sm={12}>\r\n                            <Accordion defaultActiveKey=\"0\">\r\n                                <Accordion.Item eventKey=\"0\">\r\n                                    <Accordion.Header>CGPA</Accordion.Header>\r\n                                    <Accordion.Body>\r\n                                        <Row>\r\n                                            <Col md={6} sm={12}>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Text id=\"basic-addon1\">E1/SEM1</InputGroup.Text>\r\n                                                    <FormControl\r\n                                                        defaultValue={graduation.allcgpa ? graduation.allcgpa['0'] : ''}\r\n                                                        onChange={(e) => calculateAverageCgpa('0', e.target.value)}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        aria-label=\"SchoolName\"\r\n                                                        aria-describedby=\"basic-addon1\"\r\n                                                        disabled={!edit}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Col>\r\n                                            <Col md={6} sm={12}>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Text id=\"basic-addon1\">E1/SEM2</InputGroup.Text>\r\n                                                    <FormControl\r\n                                                        defaultValue={graduation.allcgpa ? graduation.allcgpa['1'] : ''}\r\n                                                        onChange={(e) => calculateAverageCgpa('1', e.target.value)}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        aria-label=\"SchoolName\"\r\n                                                        aria-describedby=\"basic-addon1\"\r\n                                                        disabled={!edit}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Col>\r\n                                            <Col md={6} sm={12}>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Text id=\"basic-addon1\">E2/SEM1</InputGroup.Text>\r\n                                                    <FormControl\r\n                                                        defaultValue={graduation.allcgpa ? graduation.allcgpa['2'] : ''}\r\n                                                        onChange={(e) => calculateAverageCgpa('2', e.target.value)}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        aria-label=\"SchoolName\"\r\n                                                        aria-describedby=\"basic-addon1\"\r\n                                                        disabled={!edit}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Col>\r\n                                            <Col md={6} sm={12}>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Text id=\"basic-addon1\">E2/SEM2</InputGroup.Text>\r\n                                                    <FormControl\r\n                                                        defaultValue={graduation.allcgpa ? graduation.allcgpa['3'] : ''}\r\n                                                        onChange={(e) => calculateAverageCgpa('3', e.target.value)}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        aria-label=\"SchoolName\"\r\n                                                        aria-describedby=\"basic-addon1\"\r\n                                                        disabled={!edit}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Col>\r\n                                            <Col md={6} sm={12}>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Text id=\"basic-addon1\">E3/SEM1</InputGroup.Text>\r\n                                                    <FormControl\r\n                                                        defaultValue={graduation.allcgpa ? graduation.allcgpa['4'] : ''}\r\n                                                        onChange={(e) => calculateAverageCgpa('4', e.target.value)}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        aria-label=\"SchoolName\"\r\n                                                        aria-describedby=\"basic-addon1\"\r\n                                                        disabled={!edit}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Col>\r\n                                            <Col md={6} sm={12}>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Text id=\"basic-addon1\">E3/SEM2</InputGroup.Text>\r\n                                                    <FormControl\r\n                                                        defaultValue={graduation.allcgpa ? graduation.allcgpa['5'] : ''}\r\n                                                        onChange={(e) => calculateAverageCgpa('5', e.target.value)}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        aria-label=\"SchoolName\"\r\n                                                        aria-describedby=\"basic-addon1\"\r\n                                                        disabled={!edit}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Col>\r\n                                            <Col md={6} sm={12}>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Text id=\"basic-addon1\">E4/SEM1</InputGroup.Text>\r\n                                                    <FormControl\r\n                                                        defaultValue={graduation.allcgpa ? graduation.allcgpa['6'] : ''}\r\n                                                        onChange={(e) => calculateAverageCgpa('6', e.target.value)}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        aria-label=\"SchoolName\"\r\n                                                        aria-describedby=\"basic-addon1\"\r\n                                                        disabled={!edit}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Col>\r\n                                            <Col md={6} sm={12}>\r\n                                                <InputGroup className=\"mb-3\">\r\n                                                    <InputGroup.Text id=\"basic-addon1\">E4/SEM2</InputGroup.Text>\r\n                                                    <FormControl\r\n                                                        defaultValue={graduation.allcgpa ? graduation.allcgpa['7'] : ''}\r\n                                                        onChange={(e) => calculateAverageCgpa('7', e.target.value)}\r\n                                                        placeholder=\"CGPA\"\r\n                                                        aria-label=\"SchoolName\"\r\n                                                        aria-describedby=\"basic-addon1\"\r\n                                                        disabled={!edit}\r\n                                                    />\r\n                                                </InputGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Accordion.Body>\r\n                                </Accordion.Item>\r\n                            </Accordion>\r\n                            <br />\r\n                        </Col> :\r\n                        <InputGroup className=\"mb-3\">\r\n                            <InputGroup.Text id=\"basic-addon1\">CGPA</InputGroup.Text>\r\n                            <FormControl\r\n                                value={graduation.cgpa}\r\n                                placeholder=\"Overall CGPA\"\r\n                                aria-label=\"SchoolName\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled\r\n                            />\r\n                        </InputGroup>}\r\n                    <Col sm={12}>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                as='textarea'\r\n                                value={graduation.loc}\r\n                                onChange={(e) => updateGraduation('loc', e.target.value)}\r\n                                placeholder=\"Address of University\"\r\n                                aria-label=\"address\"\r\n                                aria-describedby=\"basic-addon1\"\r\n                                disabled={!edit}\r\n                            />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EducationDetails;","import React, { useState, useEffect } from 'react';\r\nimport { Row, Card, Accordion, Form, Col, Button } from 'react-bootstrap';\r\nimport { MdDelete } from 'react-icons/md'\r\n\r\nconst Skills = ({ edit, profileData, updatedProfile, setupdatedProfile, setDirty, setPristine }) => {\r\n    const [addNew, setaddNew] = useState(false);\r\n    const [hardSkills, sethardSkills] = useState([]);\r\n    const [softSkills, setsoftSkills] = useState([]);\r\n    const [newskill, setnewskill] = useState({\r\n        name: '',\r\n        level: 'beginner'\r\n    });\r\n    const [newTech, setnewTech] = useState({\r\n        name: '',\r\n        level: 'beginner',\r\n        tools: \"\"\r\n    });\r\n    const [newSubject, setnewSubject] = useState({\r\n        name: '',\r\n        description: '',\r\n    });\r\n    const [newLanguage, setnewLanguage] = useState({\r\n        name: '',\r\n        level: 'beginner',\r\n    });\r\n\r\n    useEffect(() => {\r\n        sethardSkills(profileData ? profileData.hardSkills ? profileData.hardSkills : [] : []);\r\n        setsoftSkills(profileData ? profileData.softSkills ? profileData.softSkills : [] : []);\r\n    }, [profileData]);\r\n\r\n    const addHardSkill = (title) => {\r\n        setDirty()\r\n        if (title === 'Programming Languages') {\r\n            let newhardSkills = hardSkills;\r\n            newhardSkills[0] = {\r\n                \"title\": \"Programming Languages\",\r\n                \"data\": [\r\n                    ...newhardSkills[0].data,\r\n                    newskill\r\n                ]\r\n            }\r\n            sethardSkills(newhardSkills);\r\n            setupdatedProfile({ ...updatedProfile, hardSkills: newhardSkills });\r\n            setaddNew(false)\r\n        }\r\n        if (title === 'Technologies') {\r\n            let newhardSkills = hardSkills;\r\n            newhardSkills[1] = {\r\n                \"title\": \"Technologies\",\r\n                \"data\": [\r\n                    ...newhardSkills[1].data,\r\n                    newTech\r\n                ]\r\n            }\r\n            sethardSkills(newhardSkills);\r\n            setupdatedProfile({ ...updatedProfile, hardSkills: newhardSkills });\r\n            setaddNew(false)\r\n        }\r\n        if (title === 'Subjects') {\r\n            let newhardSkills = hardSkills;\r\n            newhardSkills[2] = {\r\n                \"title\": \"Subjects\",\r\n                \"data\": [\r\n                    ...newhardSkills[2].data,\r\n                    newSubject\r\n                ]\r\n            }\r\n            sethardSkills(newhardSkills);\r\n            setupdatedProfile({ ...updatedProfile, hardSkills: newhardSkills });\r\n            setaddNew(false)\r\n        }\r\n    }\r\n\r\n    const changeSkillLevel = (level, name, title) => {\r\n        setDirty()\r\n        if (title === 'Programming Languages') {\r\n            let newhardSkills = hardSkills;\r\n            const index = newhardSkills[0].data.findIndex(x => x.name === name);\r\n            newhardSkills[0].data[index] = {\r\n                \"name\": name,\r\n                \"level\": level\r\n            }\r\n            sethardSkills(newhardSkills);\r\n            setupdatedProfile({ ...updatedProfile, hardSkills: newhardSkills });\r\n        }\r\n        if (title === 'Technologies') {\r\n            let newhardSkills = hardSkills;\r\n            const index = newhardSkills[1].data.findIndex(x => x.name === name);\r\n            newhardSkills[1].data[index] = {\r\n                ...newhardSkills[1].data[index],\r\n                \"level\": level\r\n            }\r\n            sethardSkills(newhardSkills);\r\n            setupdatedProfile({ ...updatedProfile, hardSkills: newhardSkills });\r\n        }\r\n    }\r\n\r\n    const changeTools = (tools, name) => {\r\n        setDirty()\r\n        let newhardSkills = hardSkills;\r\n        const index = newhardSkills[1].data.findIndex(x => x.name === name);\r\n        newhardSkills[1].data[index] = {\r\n            ...newhardSkills[1].data[index],\r\n            \"tools\": tools\r\n        }\r\n        sethardSkills(newhardSkills);\r\n        setupdatedProfile({ ...updatedProfile, hardSkills: newhardSkills });\r\n    }\r\n\r\n    const changeDescription = (description, name) => {\r\n        setDirty()\r\n        let newhardSkills = hardSkills;\r\n        const index = newhardSkills[2].data.findIndex(x => x.name === name);\r\n        newhardSkills[2].data[index] = {\r\n            ...newhardSkills[2].data[index],\r\n            \"description\": description\r\n        }\r\n        sethardSkills(newhardSkills);\r\n        setupdatedProfile({ ...updatedProfile, hardSkills: newhardSkills });\r\n    }\r\n\r\n    const addSoftSkill = (title) => {\r\n        setDirty()\r\n        if (title === 'Language Proficiency') {\r\n            let newsoftSkills = softSkills;\r\n            newsoftSkills[0] = {\r\n                \"title\": \"Language Proficiency\",\r\n                \"data\": [\r\n                    ...newsoftSkills[0].data,\r\n                    newLanguage\r\n                ]\r\n            }\r\n            setsoftSkills(newsoftSkills);\r\n            setupdatedProfile({ ...updatedProfile, softSkills: newsoftSkills });\r\n            setaddNew(false)\r\n        }\r\n    }\r\n\r\n    const changeLanguageLevel = (level, name) => {\r\n        setDirty()\r\n        let newsoftSkills = softSkills;\r\n        const index = newsoftSkills[0].data.findIndex(x => x.name === name);\r\n        newsoftSkills[0].data[index] = {\r\n            \"name\": name,\r\n            \"level\": level\r\n        }\r\n        setsoftSkills(newsoftSkills);\r\n        setupdatedProfile({ ...updatedProfile, softSkills: newsoftSkills });\r\n    }\r\n\r\n    const changeSoftSkill = (level, title) => {\r\n        setDirty()\r\n        let newsoftSkills = softSkills;\r\n        const index = newsoftSkills.findIndex(x => x.title === title);\r\n        newsoftSkills[index] = {\r\n            \"title\": title,\r\n            \"level\": level\r\n        }\r\n        setsoftSkills(newsoftSkills);\r\n        setupdatedProfile({ ...updatedProfile, softSkills: newsoftSkills });\r\n    }\r\n\r\n    const deleteHardSkill = (title, index) => {\r\n        setDirty()\r\n        if (title === 'Programming Languages') {\r\n            let newhardSkills = hardSkills;\r\n            newhardSkills[0] = {\r\n                \"title\": \"Programming Languages\",\r\n                \"data\": newhardSkills[0].data.filter((_, i) => i !== index)\r\n            }\r\n            sethardSkills(newhardSkills);\r\n            setupdatedProfile({ ...updatedProfile, hardSkills: newhardSkills })\r\n        }\r\n        if (title === 'Technologies') {\r\n            let newhardSkills = hardSkills;\r\n            newhardSkills[1] = {\r\n                \"title\": \"Technologies\",\r\n                \"data\": newhardSkills[1].data.filter((_, i) => i !== index)\r\n            }\r\n            sethardSkills(newhardSkills);\r\n            setupdatedProfile({ ...updatedProfile, hardSkills: newhardSkills })\r\n        }\r\n        if (title === 'Subjects') {\r\n            let newhardSkills = hardSkills;\r\n            newhardSkills[2] = {\r\n                \"title\": \"Subjects\",\r\n                \"data\": newhardSkills[2].data.filter((_, i) => i !== index)\r\n            }\r\n            sethardSkills(newhardSkills);\r\n            setupdatedProfile({ ...updatedProfile, hardSkills: newhardSkills })\r\n        }\r\n    }\r\n\r\n    const deleteSoftSkill = (index) => {\r\n        setDirty()\r\n        let newsoftSkills = softSkills;\r\n        newsoftSkills[0] = {\r\n            ...newsoftSkills[0],\r\n            \"data\": newsoftSkills[0].data.filter((_, i) => i !== index)\r\n        }\r\n        setsoftSkills(newsoftSkills);\r\n        setupdatedProfile({ ...updatedProfile, softSkills: newsoftSkills })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Skills\">\r\n            <p className=\"heading\">Skills</p>\r\n            <p className=\"message\">Rate your skills according to your capability</p>\r\n            {/* Hard Skills  */}\r\n            <Card body style={{ padding: '10px' }}>\r\n                <p className=\"sub-heading\">Technical Skills</p>\r\n                <Row>\r\n                    <Accordion>\r\n                        {hardSkills ? hardSkills.map((skill, index) => {\r\n                            return <Accordion.Item eventKey={index} key={index}>\r\n                                <Accordion.Header>{skill.title}</Accordion.Header>\r\n                                <Accordion.Body>\r\n                                    {skill ? skill.data.map((item, index) => {\r\n                                        return (<div key={index}>\r\n                                            <div>\r\n                                                <div className=\"skill\">\r\n                                                    <p>\r\n                                                        {\r\n                                                            edit ?\r\n                                                                <span onClick={() => deleteHardSkill(skill.title, index)} style={{ marginRight: '10px', color: 'tomato', cursor: 'pointer' }}><MdDelete size={24} /></span>\r\n                                                                : null\r\n                                                        }\r\n                                                        {item.name}\r\n                                                    </p>\r\n                                                    <div>\r\n                                                        {item.description !== undefined ? <Form.Control defaultValue={item.description} placeholder=\"Describe topics you know\" onChange={(e) => changeDescription(e.target.value, item.name)} type='text' className='skillVal' style={{ flexWrap: 'wrap', maxWidth: '400px' }} size='sm' aria-label=\"Default select example\" disabled={!edit} /> :\r\n                                                            <Form.Select onChange={(e) => changeSkillLevel(e.target.value, item.name, skill.title)} className=\"skillVal\" size='sm' value={item.level} aria-label=\"Default select example\" disabled={!edit}>\r\n                                                                <option value=\"Beginner\">Beginner</option>\r\n                                                                <option value=\"Moderate\">Moderate</option>\r\n                                                                <option value=\"Advanced\">Advanced</option>\r\n                                                            </Form.Select>}\r\n                                                    </div>\r\n                                                </div>\r\n                                                {item.tools !== undefined ? <Form.Control\r\n                                                    size={'sm'}\r\n                                                    type='text'\r\n                                                    onChange={(e) => changeTools(e.target.value, item.name)}\r\n                                                    defaultValue={item.tools === undefined || item.tools === '' ? '' : item.tools}\r\n                                                    placeholder=\"Frameworks you are specialized in..\"\r\n                                                    style={{ marginBottom: '30px', marginTop: '10px', minHeight: '50px' }}\r\n                                                    disabled={!edit}\r\n                                                /> : null}\r\n                                            </div>\r\n                                        </div>)\r\n                                    }) : null}<br />\r\n                                    {edit ? addNew ? <Button variant=\"light\" onClick={() => { setaddNew(false); setPristine() }} style={{ fontSize: '14px !important', minWidth: '100px', borderRadius: '25px', marginBottom: '20px' }} size='sm'>cancel</Button> : <Button style={{ fontSize: '14px !important', minWidth: '100px', borderRadius: '25px', marginBottom: '20px' }} size='sm' onClick={() => setaddNew(true)}>+ Add</Button> : null}\r\n                                    {addNew ? <Col lg={12}>\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                            <Form.Control\r\n                                                onChange={(e) => { setDirty(); skill.title === 'Programming Languages' ? setnewskill({ ...newskill, name: e.target.value }) : skill.title === 'Subjects' ? setnewSubject({ ...newSubject, name: e.target.value }) : setnewTech({ ...newTech, name: e.target.value }) }}\r\n                                                value={skill.title === 'Programming Languages' ? newskill.name : skill.title === 'Subjects' ? newSubject.name : newTech.name}\r\n                                                type=\"text\"\r\n                                                style={{ marginRight: '10px' }}\r\n                                                placeholder={skill.title === 'Programming Languages' ? 'Language' : skill.title === 'Subjects' ? 'Subject' : 'technology'}\r\n                                            />\r\n                                            {skill.title === 'Technologies' ? <Form.Control\r\n                                                style={{ marginRight: '10px' }}\r\n                                                onChange={(e) => { setnewTech({ ...newTech, tools: e.target.value }); setDirty() }}\r\n                                                value={newTech.tools}\r\n                                                type=\"text\"\r\n                                                placeholder='specialization'\r\n                                            /> : null}\r\n                                            {skill.title === 'Subjects' ? <Form.Control style={{ marginRight: '10px' }} value={newSubject.description} type='text' placeholder='Describe topics you know' onChange={(e) => { setnewSubject({ ...newSubject, description: e.target.value }); setDirty(); }} />\r\n                                                : <Form.Select style={{ marginRight: '10px' }} value={newskill.level} onChange={(e) => { setnewskill({ ...newskill, level: e.target.value }); setDirty() }} aria-label=\"Default select example\">\r\n                                                    <option value=\"Beginner\">Beginner</option>\r\n                                                    <option value=\"Moderate\">Moderate</option>\r\n                                                    <option value=\"Advanced\">Advanced</option>\r\n                                                </Form.Select>}\r\n                                            <Button style={{ fontSize: '14px !important', minWidth: '100px' }} onClick={() => addHardSkill(skill.title)}>Add</Button>\r\n                                        </div>\r\n                                    </Col> : null}\r\n                                </Accordion.Body>\r\n                            </Accordion.Item>\r\n                        }) : null}\r\n                    </Accordion>\r\n                </Row>\r\n            </Card>\r\n\r\n            {/* Soft Skills  */}\r\n            <Card body style={{ padding: '10px', marginTop: '5px' }}>\r\n                <p className=\"sub-heading\">Soft Skills</p>\r\n                <Row>\r\n                    <Accordion>\r\n                        {softSkills ? softSkills.map((skill, index) => {\r\n                            return skill.title === 'Language Proficiency' ? <Accordion.Item eventKey={index} key={index}>\r\n                                <Accordion.Header>{skill.title}</Accordion.Header>\r\n                                <Accordion.Body>\r\n                                    {skill.data.map((item, index) => {\r\n                                        return <div className=\"skill\" key={index}>\r\n                                            <p>\r\n                                                {\r\n                                                    edit ?\r\n                                                        <span onClick={() => deleteSoftSkill(index)} style={{ marginRight: '10px', color: 'tomato', cursor: 'pointer' }}><MdDelete size={24} /></span>\r\n                                                        : null\r\n                                                }\r\n                                                {item.name}\r\n                                            </p>\r\n                                            <Form.Select className=\"skillVal\" size='sm' onChange={(e) => changeLanguageLevel(e.target.value, item.name)} value={item.level} aria-label=\"Default select example\" disabled={!edit}>\r\n                                                <option value=\"Beginner\">Beginner</option>\r\n                                                <option value=\"Medium\">Moderate</option>\r\n                                                <option value=\"Advanced\">Advanced</option>\r\n                                            </Form.Select>\r\n                                        </div>\r\n                                    })}\r\n                                    <br />\r\n                                    {edit ? addNew ? <Button variant=\"light\" onClick={() => { setaddNew(false); setPristine() }} style={{ fontSize: '14px !important', minWidth: '100px', borderRadius: '25px', marginBottom: '20px' }} size='sm'>cancel</Button> : <Button variant=\"primary\" size='sm' style={{ fontSize: '14px !important', minWidth: '100px', borderRadius: '25px', marginBottom: '20px' }} onClick={() => setaddNew(true)}>+ Add</Button> : null}\r\n                                    {addNew ? <Col lg={12}>\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                            <Form.Control\r\n                                                onChange={(e) => { setnewLanguage({ ...newLanguage, name: e.target.value }); setDirty() }}\r\n                                                value={newLanguage.name}\r\n                                                type=\"text\"\r\n                                                placeholder='Language'\r\n                                                style={{ marginRight: '10px' }}\r\n                                            />\r\n                                            <Form.Select style={{ marginRight: '10px' }} defaultValue={newskill.level} onChange={(e) => { setnewLanguage({ ...newLanguage, level: e.target.value }); setDirty() }} aria-label=\"Default select example\">\r\n                                                <option value=\"Beginner\">Beginner</option>\r\n                                                <option value=\"Moderate\">Moderate</option>\r\n                                                <option value=\"Advanced\">Advanced</option>\r\n                                            </Form.Select>\r\n                                            <Button style={{ fontSize: '14px !important', minWidth: '100px' }} onClick={() => addSoftSkill(skill.title)}>Add</Button>\r\n                                        </div>\r\n                                    </Col> : null}\r\n                                </Accordion.Body>\r\n                            </Accordion.Item> : <div className='softSkill' key={index}>\r\n                                <p style={{ fontSize: '14px' }}>{skill.title}</p>\r\n                                <center>\r\n                                    <Form.Select className=\"skillVal\" size='sm' onChange={(e) => changeSoftSkill(e.target.value, skill.title)} value={skill.level} style={{ maxWidth: '120px', height: '35px', alignItems: 'center', marginTop: '10px' }} aria-label=\"Default select example\" disabled={!edit}>\r\n                                        <option value=\"Beginner\">Beginner</option>\r\n                                        <option value=\"Moderate\">Moderate</option>\r\n                                        <option value=\"Advanced\">Advanced</option>\r\n                                    </Form.Select>\r\n                                </center>\r\n                            </div>\r\n                        }) : null}\r\n                    </Accordion>\r\n                </Row>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skills;","import React, { useState, useEffect } from 'react';\r\nimport { Card, Row, Col, Form, InputGroup, Button } from 'react-bootstrap';\r\nimport { SiLeetcode } from 'react-icons/si'\r\nimport { BsLink } from 'react-icons/bs';\r\nimport { MdOutlineCancel } from 'react-icons/md';\r\nimport { FaGithub, FaLinkedin, FaHackerrank, FaYoutube } from 'react-icons/fa';\r\n\r\nconst SocialMedia = ({ edit, profileData, updatedProfile, setupdatedProfile, setDirty }) => {\r\n    const [addNew, setAddNew] = useState(false)\r\n    const [newLinks, setnewLinks] = useState([]);\r\n    const [link, setlink] = useState('');\r\n\r\n    useEffect(() => {\r\n        setnewLinks(profileData.links ? profileData.links : [])\r\n    }, [profileData]);\r\n\r\n    const addLink = () => {\r\n        setDirty()\r\n        setnewLinks([...newLinks, link]);\r\n        setupdatedProfile({ ...updatedProfile, links: [...newLinks, link] });\r\n        setAddNew(false);\r\n        setlink('');\r\n    }\r\n\r\n    const removeLink = (link) => {\r\n        setDirty()\r\n        setnewLinks(newLinks.filter(l => l !== link))\r\n        setupdatedProfile({ ...updatedProfile, links: newLinks.filter(l => l !== link) });\r\n    }\r\n\r\n    return (\r\n        <div className=\"SocialMedia\">\r\n           <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', height:'fit-content' }}>\r\n                <div style={{margin:'0px'}}>\r\n                    <p className=\"heading\">External Links</p>\r\n                    <p className=\"message\">Add your links here</p>\r\n                </div>\r\n                {addNew ?\r\n                    <Button variant=\"light\" onClick={() => setAddNew(false)} style={{ minWidth: '100px', borderRadius: '10px' }} size='sm'>cancel</Button>\r\n                    :\r\n                    edit ?\r\n                        <Button onClick={() => setAddNew(true)} style={{ minWidth: '100px', borderRadius: '10px' }} size='sm'>+ Link</Button>\r\n                        : null\r\n                }\r\n            </div>\r\n            <Card body style={{ padding: '10px' }}>\r\n                <Row>\r\n                    {addNew ? null : newLinks ? newLinks.length === 0 ?\r\n                        <p style={{ textAlign: 'center', width: '100%', color: 'gray' }}> No Links Available!<br /> Try to add new links...</p>\r\n                        :\r\n                        newLinks.map((link, index) => {\r\n                            return (\r\n                                <Col key={index} md={6} sm={12}>\r\n                                    <Card body className='linkField'>\r\n                                        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                                            <i> {link.includes('github') ? <FaGithub size={20} /> : link.includes('linkedin') ? <FaLinkedin size={20} /> : link.includes('hackerrank') ? <FaHackerrank size={20} /> : link.includes('leetcode') ? <SiLeetcode size={20} /> : link.includes('youtube') ? <FaYoutube size={20} /> : <BsLink size={20} />}</i>\r\n                                            <a href={link} rel=\"noopener noreferrer\" target=\"_blank\" style={{overflow: 'hidden', whiteSpace: 'nowrap', textOverflow:'ellipsis'}}>{link}</a>\r\n                                        </div>\r\n                                        {edit ? <i><MdOutlineCancel size={16} style={{ color: '#3c4852', marginLeft: '5px', cursor: 'pointer' }} onClick={() => removeLink(link)} /></i> : null}\r\n                                    </Card>\r\n                                </Col>\r\n                            );\r\n                        }) : null\r\n                    }\r\n                    {addNew ?\r\n                        <Col lg={12}>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <Form.Control\r\n                                    onChange={(e) => { setlink(e.target.value); setDirty() }}\r\n                                    value={link}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Place your link here..\"\r\n                                />\r\n                                <Button variant=\"secondary\" style={{ minWidth: '100px' }} onClick={addLink}>Add</Button>\r\n                            </InputGroup>\r\n                        </Col>\r\n                        : null\r\n                    }\r\n                </Row>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocialMedia;","import React, { useState, useEffect } from 'react';\r\nimport { Card, Col, FormControl, InputGroup, Button, Badge } from 'react-bootstrap'\r\nimport { MdOutlineCancel } from 'react-icons/md'\r\n\r\nconst Hobbies = ({ edit, profileData, updatedProfile, setupdatedProfile, setDirty }) => {\r\n    const [addNew, setAddNew] = useState(false);\r\n    const [newHobbies, setnewHobbies] = useState([]);\r\n    const [hobbie, sethobbie] = useState('');\r\n\r\n    useEffect(() => {\r\n        setnewHobbies(profileData.hobbies ? profileData.hobbies : [])\r\n    }, [profileData]);\r\n\r\n    const addHobbie = () => {\r\n        setDirty();\r\n        setnewHobbies([...newHobbies, hobbie]);\r\n        setupdatedProfile({ ...updatedProfile, hobbies: [...newHobbies, hobbie] });\r\n        setAddNew(false);\r\n        sethobbie('');\r\n    }\r\n\r\n    const removeHobbie = (hobbie) => {\r\n        setDirty();\r\n        setnewHobbies(newHobbies.filter(h => h !== hobbie))\r\n        setupdatedProfile({ ...updatedProfile, hobbies: newHobbies.filter(h => h !== hobbie) });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Hobbies\">\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', height: 'fit-content' }}>\r\n                <div style={{ margin: '0px' }}>\r\n                    <p className=\"heading\">Hobbies</p>\r\n                    <p className=\"message\">Add your hobbies here</p>\r\n                </div>\r\n                {addNew ?\r\n                    <Button variant=\"light\" onClick={() => setAddNew(false)} style={{ minWidth: '100px' }} size='sm'>cancel</Button>\r\n                    :\r\n                    edit ?\r\n                        <Button onClick={() => setAddNew(true)} style={{ minWidth: '100px', borderRadius: '10px' }} size='sm'>+ Hobbie</Button>\r\n                        : null\r\n                }\r\n            </div>\r\n            <Card body >\r\n                <div>\r\n                    {addNew ? null : newHobbies ? newHobbies.length === 0 ?\r\n                        <p style={{ textAlign: 'center', width: '100%', color: 'gray' }}> No Hobbies Available!<br /> Try to add new Hobbies...</p>\r\n                        :\r\n                        newHobbies.map((hobbie, index) => {\r\n                            return (\r\n                                <Badge key={index} style={{ padding: '10px 20px', fontSize: '14px', color: '#3c4852', width: 'fit-content', border:'1px solid #c8c8c8', margin:'5px' }} bg=\"light\" pill>\r\n                                    {hobbie}&nbsp;\r\n                                    {edit ? <MdOutlineCancel size={15} style={{ color: '#6b818b', float: 'right', marginLeft: '5px', cursor: 'pointer' }} onClick={() => removeHobbie(hobbie)} /> : null}\r\n                                </Badge>\r\n                            );\r\n                        }) : null\r\n                    }\r\n                    {addNew ?\r\n                        <Col lg={12}>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"Write your hobbie...\"\r\n                                    value={hobbie}\r\n                                    onChange={(e) => { sethobbie(e.target.value); setDirty() }}\r\n                                />\r\n                                <Button variant=\"secondary\" style={{ minWidth: '100px' }} onClick={addHobbie}>Add</Button>\r\n                            </InputGroup>\r\n                        </Col>\r\n                        : null}\r\n                </div>\r\n\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Hobbies;","import React, { useState, useEffect } from 'react'\r\nimport { Card, Form, Accordion, Button } from 'react-bootstrap';\r\nimport { FiLink } from 'react-icons/fi'\r\nimport { MdDelete } from 'react-icons/md'\r\n\r\nconst Projects = (props) => {\r\n    const [addNew, setaddNew] = useState(false);\r\n    const [projects, setprojects] = useState([]);\r\n    const [newProject, setnewProject] = useState({\r\n        title: '',\r\n        description: '',\r\n        technologies: '',\r\n        link: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        setprojects(props.profileData.projects ? props.profileData.projects : []);\r\n    }, [props.profileData]);\r\n\r\n    const addProject = () => {\r\n        props.setDirty()\r\n        setnewProject({\r\n            title: '',\r\n            description: '',\r\n            technologies: '',\r\n            link: '',\r\n        })\r\n        setprojects([...projects, newProject]);\r\n        props.setupdatedProfile({ ...props.updatedProfile, projects: [...projects, newProject] });\r\n        setaddNew(false);\r\n    }\r\n\r\n    const updateProject = (title, key, value) => {\r\n        props.setDirty()\r\n        const index = projects.findIndex(project => project.title === title);\r\n        const newProjects = [...projects];\r\n        newProjects[index] = {\r\n            ...newProjects[index],\r\n            [key]: value\r\n        }\r\n        setprojects(newProjects);\r\n        props.setupdatedProfile({ ...props.updatedProfile, projects: newProjects });\r\n    }\r\n\r\n    const deleteProject = (x) => {\r\n        props.setDirty()\r\n        setprojects(projects.filter(project => project.title !== x));\r\n        props.setupdatedProfile({ ...props.updatedProfile, projects: projects.filter(project => project.title !== x) });\r\n    }\r\n\r\n    return (\r\n        <div className=\"Projects\">\r\n            <p className=\"heading\">Projects</p>\r\n            <p className=\"message\">Add your Projects and team members</p>\r\n            <Card body style={{ padding: '10px', fontSize: '14px' }}>\r\n                {\r\n                    props.edit && addNew ?\r\n                        <>\r\n                            <Form.Label htmlFor=\"title\">Project Title :</Form.Label>\r\n                            <Form.Control\r\n                                value={newProject.title}\r\n                                onChange={(e) => { setnewProject({ ...newProject, title: e.target.value }); props.setDirty() }}\r\n                                as='input'\r\n                                type='text'\r\n                                id='title'\r\n                                placeholder=\"Your project title\"\r\n                            />\r\n                            <br />\r\n                            <Form.Label htmlFor=\"description\">Describe your project :</Form.Label>\r\n                            <Form.Control\r\n                                value={newProject.description}\r\n                                onChange={(e) => { setnewProject({ ...newProject, description: e.target.value }); props.setDirty() }}\r\n                                as='textarea'\r\n                                roes={3}\r\n                                id='description'\r\n                                placeholder=\"Describe your project....\"\r\n                            />\r\n                            <br />\r\n                            <Form.Label htmlFor=\"links\">Technologies used :</Form.Label>\r\n                            <Form.Control\r\n                                value={newProject.technologies}\r\n                                onChange={(e) => { setnewProject({ ...newProject, technologies: e.target.value }); props.setDirty() }}\r\n                                as='input'\r\n                                type='text'\r\n                                id='links'\r\n                                placeholder=\"Technologies used in this project\"\r\n                            />\r\n                            <br />\r\n                            <Form.Label htmlFor=\"links\">External link :</Form.Label>\r\n                            <Form.Control\r\n                                value={newProject.link}\r\n                                onChange={(e) => { setnewProject({ ...newProject, link: e.target.value }); props.setDirty() }}\r\n                                as='input'\r\n                                type='text'\r\n                                id='links'\r\n                                placeholder=\"paste video or document link..(Optional)\"\r\n                            />\r\n                        </>\r\n                        :\r\n                        <Accordion>\r\n                            {/* for every project */}\r\n                            {projects.length === 0 ?\r\n                                <p style={{ textAlign: 'center', width: '100%', color: 'gray' }}> No Projects Available!<br /> Try to add new Projects...</p>\r\n                                : projects.map((project, index) => {\r\n                                    return (\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }} key={index}>\r\n                                            {\r\n                                                props.edit ?\r\n                                                    <span onClick={() => deleteProject(project.title)} style={{ marginRight: '10px', color: 'tomato', cursor: 'pointer' }}><MdDelete size={24} /></span> : null\r\n                                            }\r\n                                            <Accordion.Item style={{ width: '100%' }} eventKey={index}>\r\n                                                <Accordion.Header>\r\n                                                    {project.title}\r\n                                                </Accordion.Header>\r\n                                                <Accordion.Body>\r\n                                                    {\r\n                                                        !props.edit ?\r\n                                                            project.link !== '' ? <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\" style={{ float: 'right', marginBottom: \"10px\", textDecoration: 'none' }}><FiLink size={14} />&nbsp;know more</a> : null\r\n                                                            :\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                size='sm'\r\n                                                                onChange={(e) => { updateProject(project.title, 'link', e.target.value) }}\r\n                                                                defaultValue={project.link}\r\n                                                                placeholder=\"paste video or document link here\"\r\n                                                                style={{ marginBottom: \"10px\" }}\r\n                                                            />\r\n                                                    }\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        rows={3}\r\n                                                        onChange={(e) => { updateProject(project.title, 'description', e.target.value) }}\r\n                                                        defaultValue={project.description}\r\n                                                        placeholder=\"Enter your project description....\"\r\n                                                        style={{ fontSize: '14px', marginBottom: '10px' }}\r\n                                                        disabled={!props.edit}\r\n\r\n                                                    />\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size='sm'\r\n                                                        onChange={(e) => { updateProject(project.title, 'technologies', e.target.value) }}\r\n                                                        defaultValue={project.technologies}\r\n                                                        placeholder=\"Technologies used in this project\"\r\n                                                        disabled={!props.edit}\r\n                                                    />\r\n                                                </Accordion.Body>\r\n                                            </Accordion.Item>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n                        </Accordion>\r\n                }\r\n                {\r\n                    props.edit ?\r\n                        addNew ?\r\n                            <div style={{ marginTop: '20px' }}>\r\n                                <Button size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px' }} onClick={addProject}>push</Button>\r\n                                <Button variant=\"light\" size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px', marginRight: '10px' }} onClick={() => { setaddNew(false); props.setPristine() }}>cancel</Button>\r\n                            </div>\r\n                            :\r\n                            <Button size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px', marginTop: '20px' }} onClick={() => setaddNew(true)}>+ Add</Button>\r\n\r\n                        : null\r\n                }\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","import React, { useState, useEffect } from 'react'\r\nimport { Col, Card, Form, Accordion, Row, Button } from 'react-bootstrap';\r\nimport { MdDelete } from 'react-icons/md';\r\n\r\n\r\nconst Internships = (props) => {\r\n    const [addNew, setaddNew] = React.useState(false)\r\n    const [internships, setinternships] = useState([]);\r\n    const [newInternship, setnewInternship] = useState({\r\n        'role': '',\r\n        'organization': '',\r\n        'startDate': '',\r\n        'endDate': '',\r\n        'status': 'working',\r\n        'certificate': '',\r\n        'paid': 'yes',\r\n        'duration': ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        setinternships(props.profileData.internships ? props.profileData.internships : []);\r\n    }, [props.profileData]);\r\n\r\n    const addInternship = () => {\r\n        props.setDirty();\r\n        setnewInternship({\r\n            'role': '',\r\n            'organization': '',\r\n            'startDate': '',\r\n            'endDate': '',\r\n            'status': 'working',\r\n            'certificate': '',\r\n            'paid': 'yes',\r\n            'duration': ''\r\n        })\r\n        setinternships([...internships, newInternship]);\r\n        props.setupdatedProfile({ ...props.updatedProfile, internships: [...internships, newInternship] });\r\n        setaddNew(false);\r\n    }\r\n\r\n    const updateInternship = (index, key, value) => {\r\n        props.setDirty();\r\n        const newInternships = [...internships];\r\n        newInternships[index] = {\r\n            ...newInternships[index],\r\n            [key]: value\r\n        }\r\n        setinternships(newInternships);\r\n        props.setupdatedProfile({ ...props.updatedProfile, internships: newInternships });\r\n    }\r\n\r\n    const deleteInternship = (index) => {\r\n        props.setDirty();\r\n        setinternships(internships.filter((_blank, i) => i !== index));\r\n        props.setupdatedProfile({ ...props.updatedProfile, internships: internships.filter((_, i) => i !== index) });\r\n    }\r\n\r\n    return (\r\n        <div className=\"Internships\">\r\n            <p className=\"heading\">Internships</p>\r\n            <p className=\"message\">Add your new internships and status</p>\r\n            <Card body style={{ padding: '10px', fontSize: '14px' }}>\r\n                {\r\n                    props.edit && addNew ?\r\n                        <>\r\n                            <Row>\r\n                                <Col md={6} sm={12}>\r\n                                    <Form.Label htmlFor=\"organization\">Organization name:</Form.Label>\r\n                                    <Form.Control\r\n                                        defaultValue={newInternship.organization}\r\n                                        onChange={(e) => { setnewInternship({ ...newInternship, organization: e.target.value }); props.setDirty(); }}\r\n                                        as='input'\r\n                                        size=\"sm\"\r\n                                        type='text'\r\n                                        id='organization'\r\n                                        placeholder=\"Enter organization name you worked for..\"\r\n                                        style={{ marginBottom: \"10px\" }}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6} sm={12}>\r\n                                    <Form.Label htmlFor=\"role\">Role:</Form.Label>\r\n                                    <Form.Control\r\n                                        defaultValue={newInternship.role}\r\n                                        onChange={(e) => { setnewInternship({ ...newInternship, role: e.target.value }); props.setDirty(); }}\r\n                                        as='input'\r\n                                        size=\"sm\"\r\n                                        type='text'\r\n                                        id='role'\r\n                                        placeholder=\"Enter your role in the Internship..\"\r\n                                        style={{ marginBottom: \"10px\" }}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6} sm={12}>\r\n                                    <Form.Label htmlFor=\"paid\">Paid</Form.Label>\r\n                                    <Form.Select id=\"paid\" size='sm' style={{ marginBottom: \"10px\" }} defaultValue={newInternship.paid} onChange={(e) => { setnewInternship({ ...newInternship, paid: e.target.value }); props.setDirty() }}>\r\n                                        <option value=\"Yes\">Yes</option>\r\n                                        <option value=\"no\">no</option>\r\n                                    </Form.Select>\r\n                                </Col>\r\n                                <Col md={6} sm={12}>\r\n                                    <Form.Label htmlFor=\"duration\">Duration (in Months):</Form.Label>\r\n                                    <Form.Control\r\n                                        defaultValue={newInternship.duration}\r\n                                        onChange={(e) => { setnewInternship({ ...newInternship, duration: e.target.value }); props.setDirty(); }}\r\n                                        as='input'\r\n                                        size=\"sm\"\r\n                                        type='number'\r\n                                        id='duration'\r\n                                        placeholder=\"Duration of the internship\"\r\n                                        style={{ marginBottom: \"10px\" }}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6} sm={12}>\r\n                                    <Form.Label htmlFor=\"start-date\">Starting date:</Form.Label>\r\n                                    <Form.Control\r\n                                        defaultValue={newInternship.startDate}\r\n                                        onChange={(e) => { setnewInternship({ ...newInternship, startDate: e.target.value }); props.setDirty(); }}\r\n                                        type=\"date\"\r\n                                        id=\"start-date\"\r\n                                        size='sm'\r\n                                        placeholder=\"start date\"\r\n                                        style={{ marginBottom: \"10px\" }}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6} sm={12}>\r\n                                    <Form.Label htmlFor=\"status\">Status</Form.Label>\r\n                                    <Form.Select id=\"status\" size='sm' style={{ marginBottom: \"10px\" }} defaultValue={newInternship.status} onChange={(e) => { setnewInternship({ ...newInternship, status: e.target.value }); props.setDirty() }}>\r\n                                        <option value=\"working\">working</option>\r\n                                        <option value=\"completed\">completed</option>\r\n                                    </Form.Select>\r\n                                </Col>\r\n                                {\r\n                                    newInternship.status === 'completed' ?\r\n                                        <>\r\n                                            <Col md={6} sm={12}>\r\n                                                <Form.Label htmlFor=\"end-date\">End date</Form.Label>\r\n                                                <Form.Control\r\n                                                    defaultValue={newInternship.endDate}\r\n                                                    onChange={(e) => { setnewInternship({ ...newInternship, endDate: e.target.value }); props.setDirty(); }}\r\n                                                    type=\"date\"\r\n                                                    id=\"end-date\"\r\n                                                    size='sm'\r\n                                                    placeholder=\"end date\"\r\n                                                    style={{ marginBottom: \"10px\" }}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col md={6} sm={12}>\r\n                                                <Form.Label htmlFor=\"certificate\">Certificate Link</Form.Label>\r\n                                                <Form.Control\r\n                                                    defaultValue={newInternship.certificate}\r\n                                                    onChange={(e) => { setnewInternship({ ...newInternship, certificate: e.target.value }); props.setDirty(); }}\r\n                                                    type=\"text\"\r\n                                                    id=\"certificate\"\r\n                                                    size='sm'\r\n                                                    placeholder=\"paste your link here...\"\r\n                                                    style={{ marginBottom: \"10px\" }}\r\n                                                />\r\n                                            </Col>\r\n                                        </> : null\r\n                                }\r\n                            </Row>\r\n                        </>\r\n                        :\r\n                        <Accordion>\r\n                            {internships.length === 0 ? <p style={{ textAlign: 'center', width: '100%', color: 'gray' }}> No Internships Available!<br /> Try to add new Internships...</p>\r\n                                : internships.map((internship, index) => {\r\n                                    return (\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }} key={index}>\r\n                                            {\r\n                                                props.edit ?\r\n                                                    <span onClick={() => { deleteInternship(index) }} style={{ marginRight: '10px', color: 'tomato', cursor: 'pointer' }}><MdDelete size={24} /></span> : null\r\n                                            }\r\n                                            <Accordion.Item style={{ width: '100%' }} eventKey={index}>\r\n                                                <Accordion.Header>\r\n                                                    {internship.role}\r\n                                                </Accordion.Header>\r\n                                                <Accordion.Body>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={6} sm={12}>\r\n                                                            <Form.Label htmlFor=\"organization\">Organization name</Form.Label>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                id=\"organization\"\r\n                                                                size='sm'\r\n                                                                onChange={(e) => updateInternship(index, 'organization', e.target.value)}\r\n                                                                defaultValue={internship.organization}\r\n                                                                placeholder=\"Organization name\"\r\n                                                                disabled={!props.edit}\r\n                                                                style={{ marginBottom: \"10px\" }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                        <Col md={6} sm={12}>\r\n                                                            <Form.Label htmlFor=\"paid\">Paid</Form.Label>\r\n                                                            <Form.Select id=\"paid\" size='sm' disabled={!props.edit} style={{ marginBottom: \"10px\" }} defaultValue={internship.paid} onChange={(e) => updateInternship(index, 'paid', e.target.value)}>\r\n                                                                <option value=\"Yes\">Yes</option>\r\n                                                                <option value=\"no\">no</option>\r\n                                                            </Form.Select>\r\n                                                        </Col>\r\n                                                        <Col md={6} sm={12}>\r\n                                                            <Form.Label htmlFor=\"start-date\">Starting date</Form.Label>\r\n                                                            <Form.Control\r\n                                                                defaultValue={internship.startDate}\r\n                                                                onChange={(e) => updateInternship(index, 'startDate', e.target.value)}\r\n                                                                type=\"date\"\r\n                                                                id=\"start-date\"\r\n                                                                size='sm'\r\n                                                                placeholder=\"start date\"\r\n                                                                disabled={!props.edit}\r\n                                                                style={{ marginBottom: \"10px\" }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                        <Col md={6} sm={12}>\r\n                                                            <Form.Label htmlFor=\"duration\">Duration (in Months):</Form.Label>\r\n                                                            <Form.Control\r\n                                                                defaultValue={internship.duration}\r\n                                                                onChange={(e) => updateInternship(index, 'duration', e.target.value)}\r\n                                                                as='input'\r\n                                                                size=\"sm\"\r\n                                                                type='number'\r\n                                                                id='duration'\r\n                                                                disabled={!props.edit}\r\n                                                                placeholder=\"Duration of the internship\"\r\n                                                                style={{ marginBottom: \"10px\" }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                        <Col sm={12}>\r\n                                                            <Row>\r\n                                                                <Col>\r\n                                                                    <Form.Label htmlFor=\"status\">Status</Form.Label>\r\n                                                                    <Form.Select defaultValue={internship.status} id={internship.role} disabled={!props.edit} size='sm' style={{ marginBottom: \"10px\" }} onChange={(e) => { updateInternship(index, 'status', e.target.value); }}>\r\n                                                                        <option value=\"working\">working</option>\r\n                                                                        <option value=\"completed\">completed</option>\r\n                                                                    </Form.Select>\r\n                                                                </Col>\r\n                                                                {\r\n                                                                    internship.status === 'completed' ?\r\n                                                                        internship.status === 'completed' ?\r\n                                                                            <>\r\n                                                                                <Col>\r\n                                                                                    <Form.Label htmlFor=\"end-date\">End date</Form.Label>\r\n                                                                                    <Form.Control\r\n                                                                                        defaultValue={internship.endDate}\r\n                                                                                        onChange={(e) => updateInternship(index, 'endDate', e.target.value)}\r\n                                                                                        type=\"date\"\r\n                                                                                        id=\"end-date\"\r\n                                                                                        size='sm'\r\n                                                                                        placeholder=\"end date\"\r\n                                                                                        disabled={!props.edit}\r\n                                                                                        style={{ marginBottom: \"10px\" }}\r\n                                                                                    />\r\n                                                                                </Col>\r\n                                                                            </>\r\n                                                                            : null : null\r\n                                                                }\r\n                                                            </Row>\r\n                                                        </Col>\r\n                                                        {\r\n                                                            internship.status === 'completed' && props.edit ?\r\n                                                                <Col sm={12}>\r\n                                                                    <Form.Label htmlFor=\"certificate\">Certificate Link</Form.Label>\r\n                                                                    <Form.Control\r\n                                                                        defaultValue={internship.certificate}\r\n                                                                        onChange={(e) => updateInternship(index, 'certificate', e.target.value)}\r\n                                                                        type=\"text\"\r\n                                                                        id=\"certificate\"\r\n                                                                        size='sm'\r\n                                                                        placeholder=\"paste your link here...\"\r\n                                                                        style={{ marginBottom: \"10px\" }}\r\n                                                                    />\r\n                                                                </Col> :\r\n                                                                internship.certificate ?\r\n                                                                    <a href={internship.certificate} style={{ textAligin: 'center' }} rel=\"noopener noreferrer\" target=\"_blank\">View cerificate</a>\r\n                                                                    : null\r\n                                                        }\r\n                                                    </Row>\r\n                                                </Accordion.Body>\r\n                                            </Accordion.Item>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Accordion>\r\n                }\r\n                {\r\n                    props.edit ?\r\n                        addNew ?\r\n                            <div style={{ marginTop: '20px' }}>\r\n                                <Button size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px' }} onClick={addInternship}>push</Button>\r\n                                <Button variant=\"light\" size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px', marginRight: '10px' }} onClick={() => { setaddNew(false); props.setPristine() }}>cancel</Button>\r\n                            </div>\r\n                            :\r\n                            <Button size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px', marginTop: '20px' }} onClick={() => setaddNew(true)}>+ Add</Button>\r\n\r\n                        : null\r\n                }\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Internships","import React, { useState, useEffect } from 'react'\r\nimport { Col, Card, Form, Accordion, Row, Button } from 'react-bootstrap';\r\nimport { FiLink } from 'react-icons/fi'\r\nimport { MdDelete } from 'react-icons/md'\r\n\r\n\r\nconst Certifications = (props) => {\r\n    const [addNew, setaddNew] = useState(false);\r\n    const [certifications, setcertifications] = useState([]);\r\n    const [newCertification, setnewCertification] = useState({\r\n        'title': '',\r\n        'organization': '',\r\n        'startDate': '',\r\n        'endDate': '',\r\n        'status': '',\r\n        'link': ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        setcertifications(props.profileData.certifications ? props.profileData.certifications : []);\r\n    }, [props.profileData]);\r\n\r\n    const addCertification = () => {\r\n        setnewCertification({\r\n            'title': '',\r\n            'organization': '',\r\n            'startDate': '',\r\n            'endDate': '',\r\n            'status': '',\r\n            'link': ''\r\n        })\r\n        props.setDirty();\r\n        setcertifications([...certifications, newCertification]);\r\n        props.setupdatedProfile({ ...props.updatedProfile, certifications: [...certifications, newCertification] });\r\n        setaddNew(false);\r\n    }\r\n\r\n    const updateCertification = (index, key, value) => {\r\n        props.setDirty();\r\n        const newCertifications = [...certifications];\r\n        newCertifications[index] = {\r\n            ...newCertifications[index],\r\n            [key]: value\r\n        }\r\n        setcertifications(newCertifications);\r\n        props.setupdatedProfile({ ...props.updatedProfile, certifications: newCertifications });\r\n    }\r\n\r\n    const deleteCertification = (index) => {\r\n        props.setDirty();\r\n        setcertifications(certifications.filter((_, i) => i !== index));\r\n        props.setupdatedProfile({ ...props.updatedProfile, certifications: certifications.filter((_, i) => i !== index) });\r\n    }\r\n\r\n    return (\r\n        <div className=\"Certifications\">\r\n            <p className=\"heading\">Certifications</p>\r\n            <p className=\"message\">Add your new course certifications and status</p>\r\n            <Card body style={{ padding: '10px', fontSize: '14px' }}>\r\n                {\r\n                    props.edit && addNew ?\r\n                        <>\r\n                            <Form.Label htmlFor=\"title\">Title</Form.Label>\r\n                            <Form.Control\r\n                                defaultValue={newCertification.title}\r\n                                onChange={(e) => { setnewCertification({ ...newCertification, title: e.target.value }); props.setDirty() }}\r\n                                as='input'\r\n                                type='text'\r\n                                id='title'\r\n                                placeholder=\"Enter your certification title..\"\r\n                            />\r\n                            <br />\r\n                            <Form.Label htmlFor=\"organization\">Organization name:</Form.Label>\r\n                            <Form.Control\r\n                                defaultValue={newCertification.organization}\r\n                                onChange={(e) => { setnewCertification({ ...newCertification, organization: e.target.value }); props.setDirty() }}\r\n                                as='input'\r\n                                type='text'\r\n                                id='organization'\r\n                                placeholder=\"Enter organization name you have been certified by..\"\r\n                            />\r\n                            <br />\r\n                            <Row>\r\n                                <Col md={6} sm={12} style={{ marginTop: '10px' }}>\r\n                                    <Form.Label htmlFor=\"start-date\">Starting date</Form.Label>\r\n                                    <Form.Control\r\n                                        defaultValue={newCertification.startDate}\r\n                                        onChange={(e) => { setnewCertification({ ...newCertification, startDate: e.target.value }); props.setDirty() }}\r\n                                        type=\"date\"\r\n                                        id=\"start-date\"\r\n                                        size='sm'\r\n                                        placeholder=\"start date\"\r\n                                        style={{ marginBottom: \"10px\" }}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6} sm={12} style={{ marginTop: '10px' }}>\r\n                                    <Form.Label htmlFor=\"status\">Status</Form.Label>\r\n                                    <Form.Select id=\"status\" size='sm' style={{ marginBottom: \"10px\" }} defaultValue={newCertification.status} onChange={(e) => { setnewCertification({ ...newCertification, status: e.target.value }); props.setDirty() }}>\r\n                                        <option value=\"working\">working</option>\r\n                                        <option value=\"completed\">completed</option>\r\n                                    </Form.Select>\r\n                                </Col>\r\n                                {\r\n                                    newCertification.status === 'completed' ?\r\n                                        <>\r\n                                            <Col md={6} sm={12} style={{ marginTop: '10px' }}>\r\n                                                <Form.Label htmlFor=\"end-date\">End date</Form.Label>\r\n                                                <Form.Control\r\n                                                    defaultValue={newCertification.endDate}\r\n                                                    onChange={(e) => { setnewCertification({ ...newCertification, endDate: e.target.value }); props.setDirty() }}\r\n                                                    type=\"date\"\r\n                                                    id=\"end-date\"\r\n                                                    size='sm'\r\n                                                    placeholder=\"end date\"\r\n                                                    style={{ marginBottom: \"10px\" }}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col md={6} sm={12} style={{ marginTop: '10px' }}>\r\n                                                <Form.Label htmlFor=\"link\">Certificate Link</Form.Label>\r\n                                                <Form.Control\r\n                                                    defaultValue={newCertification.link}\r\n                                                    onChange={(e) => { setnewCertification({ ...newCertification, link: e.target.value }); props.setDirty() }}\r\n                                                    as='input'\r\n                                                    type='text'\r\n                                                    id='link'\r\n                                                    placeholder=\"Enter your link of the certificate\"\r\n                                                />\r\n                                            </Col>\r\n                                        </>\r\n                                        : null\r\n                                }\r\n                            </Row>\r\n                        </>\r\n                        :\r\n                        <Accordion>\r\n                            {certifications.length === 0 ? <p style={{ textAlign: 'center', width: '100%', color: 'gray' }}> No Certifications Available!<br /> Try to add new Certifications...</p> :\r\n                                certifications.map((certification, index) => {\r\n                                    return (\r\n                                        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }} key={index}>\r\n                                            {\r\n                                                props.edit ?\r\n                                                    <span onClick={() => deleteCertification(index)} style={{ marginRight: '10px', color: 'tomato', cursor: 'pointer' }}><MdDelete size={24} /></span> : null\r\n                                            }\r\n                                            <Accordion.Item style={{ width: '100%' }} eventKey={index}>\r\n                                                <Accordion.Header>{certification.title}</Accordion.Header>\r\n                                                <Accordion.Body>\r\n                                                    {\r\n                                                        !props.edit ?\r\n                                                            <Row style={{ margin: '0 10px', textAlign: 'center' }}>\r\n                                                                <Col style={{ float: 'left', marginBottom: \"10px\", color: '#071a84' }}>{certification.startDate}</Col>\r\n                                                                <Col style={{ float: 'right', marginBottom: \"10px\", color: '#071a84' }}>{certification.endDate}</Col>\r\n                                                                {certification.link !== '' ? <Col style={{ float: 'right', marginBottom: \"10px\", color: '#071a84' }}><a href={certification.link} rel=\"noopener noreferrer\" target=\"_blank\" style={{ textDecoration: 'none' }}><FiLink size={14} />&nbsp;Certifiicate</a></Col> : null}\r\n                                                            </Row>\r\n                                                            :\r\n                                                            <Row>\r\n                                                                <Col md={6} sm={12}>\r\n                                                                    <Form.Label htmlFor=\"start-date\">Starting date</Form.Label>\r\n                                                                    <Form.Control\r\n                                                                        defaultValue={certification.startDate}\r\n                                                                        onChange={(e) => updateCertification(index, 'startDate', e.target.value)}\r\n                                                                        type=\"date\"\r\n                                                                        id=\"start-date\"\r\n                                                                        size='sm'\r\n                                                                        placeholder=\"start date\"\r\n                                                                        style={{ marginBottom: \"10px\" }}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                                <Col md={6} sm={12}>\r\n                                                                    <Form.Label htmlFor=\"status\">Status</Form.Label>\r\n                                                                    <Form.Select defaultValue={certification.status} size='sm' style={{ marginBottom: \"10px\" }} onChange={(e) => updateCertification(index, 'status', e.target.value)}>\r\n                                                                        <option value=\"working\">working</option>\r\n                                                                        <option value=\"completed\">completed</option>\r\n                                                                    </Form.Select>\r\n                                                                </Col>\r\n                                                                {\r\n                                                                    certification.status === 'completed' ?\r\n                                                                        certification.status === 'completed' ?\r\n                                                                            <>\r\n                                                                                <Col md={6} sm={12} style={{ marginTop: '10px' }}>\r\n                                                                                    <Form.Label htmlFor=\"end-date\">End date</Form.Label>\r\n                                                                                    <Form.Control\r\n                                                                                        defaultValue={certification.endDate}\r\n                                                                                        onChange={(e) => updateCertification(index, 'endDate', e.target.value)}\r\n                                                                                        type=\"date\"\r\n                                                                                        id=\"end-date\"\r\n                                                                                        size='sm'\r\n                                                                                        placeholder=\"end date\"\r\n                                                                                        style={{ marginBottom: \"10px\" }}\r\n                                                                                    />\r\n                                                                                </Col>\r\n                                                                                <Col md={6} sm={12} style={{ marginTop: '10px' }}>\r\n                                                                                    <Form.Label htmlFor=\"link\">Certificate Link</Form.Label>\r\n                                                                                    <Form.Control\r\n                                                                                        defaultValue={certification.link}\r\n                                                                                        onChange={(e) => updateCertification(index, 'link', e.target.value)}\r\n                                                                                        as='input'\r\n                                                                                        type='text'\r\n                                                                                        id='link'\r\n                                                                                        placeholder=\"Enter your link of the certificate\"\r\n                                                                                    />\r\n                                                                                </Col>\r\n                                                                            </>\r\n                                                                            : null : null\r\n                                                                }\r\n                                                            </Row>\r\n                                                    }<br />\r\n                                                    <Form.Control\r\n                                                        defaultValue={certification.organization}\r\n                                                        onChange={(e) => updateCertification(index, 'organization', e.target.value)}\r\n                                                        type=\"text\"\r\n                                                        size='sm'\r\n                                                        placeholder=\"Organization name\"\r\n                                                        disabled={!props.edit}\r\n                                                    />\r\n                                                </Accordion.Body>\r\n                                            </Accordion.Item>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                        </Accordion>\r\n                }\r\n                {\r\n                    props.edit ?\r\n                        addNew ?\r\n                            <div style={{ marginTop: '20px' }}>\r\n                                <Button size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px' }} onClick={addCertification}>push</Button>\r\n                                <Button variant=\"light\" size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px', marginRight: '10px' }} onClick={() => { setaddNew(false); props.setPristine(); }}>cancel</Button>\r\n                            </div>\r\n                            :\r\n                            <Button size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px', marginTop: '20px' }} onClick={() => setaddNew(true)}>+ Add</Button>\r\n\r\n                        : null\r\n                }\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Certifications","import React, { useState, useEffect } from 'react'\r\nimport { Card, Form, Accordion, Button } from 'react-bootstrap';\r\nimport { MdDelete } from 'react-icons/md'\r\n\r\nconst Achievements = (props) => {\r\n    const [addNew, setaddNew] = useState(false)\r\n    const [achievements, setAchievements] = useState([])\r\n    const [newAchievement, setnewAchievement] = useState({\r\n        title: '',\r\n        description: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        setAchievements(props.profileData.achievements\r\n            ? props.profileData.achievements : [])\r\n    }, [props.profileData]);\r\n\r\n    const addAchievement = () => {\r\n        props.setDirty();\r\n        setAchievements([...achievements, newAchievement]);\r\n        props.setupdatedProfile({ ...props.updatedProfile, achievements: [...achievements, newAchievement] });\r\n        setaddNew(false);\r\n    }\r\n\r\n    const updateAchivement = (index, value) => {\r\n        props.setDirty();\r\n        let newAchievements = [...achievements];\r\n        newAchievements[index] = {\r\n            ...newAchievements[index],\r\n            description: value\r\n        }\r\n        setAchievements(newAchievements);\r\n        props.setupdatedProfile({ ...props.updatedProfile, achievements: newAchievements });\r\n    }\r\n\r\n    const deleteAchivement = (index) => {\r\n        props.setDirty();\r\n        setAchievements(achievements.filter((_, i) => i !== index));\r\n        props.setupdatedProfile({ ...props.updatedProfile, achievements: achievements.filter((_, i) => i !== index) });\r\n    }\r\n\r\n    return (\r\n        <div className=\"Achievements\">\r\n            <p className=\"heading\">Achievements</p>\r\n            <p className=\"message\">Add your school and college level achievements.</p>\r\n            <Card body style={{ padding: '10px', fontSize: '14px' }}>\r\n                {\r\n                    props.edit && addNew ?\r\n                        <>\r\n                            <Form.Label htmlFor=\"name\">Achievement name :</Form.Label>\r\n                            <Form.Control\r\n                                defaultValue={newAchievement.title}\r\n                                onChange={(e) => { setnewAchievement({ ...newAchievement, title: e.target.value }); props.setDirty() }}\r\n                                as='input'\r\n                                type='text'\r\n                                id='name'\r\n                                placeholder=\"Your achievement name\"\r\n                            />\r\n                            <br />\r\n                            <Form.Label htmlFor=\"description\">Describe your achievement :</Form.Label>\r\n                            <Form.Control\r\n                                defaultValue={newAchievement.description}\r\n                                onChange={(e) => { setnewAchievement({ ...newAchievement, description: e.target.value }); props.setDirty() }}\r\n                                as='textarea'\r\n                                roes={3}\r\n                                id='description'\r\n                                placeholder=\"Tell about your achievement....\"\r\n                            />\r\n                        </>\r\n                        :\r\n                        <Accordion>\r\n                            {achievements.length === 0 ? <p style={{ textAlign: 'center', width: '100%', color: 'gray' }}> No Achievements Available!<br /> Try to add new Achievements...</p> : achievements.map((achievement, index) => {\r\n                                return <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }} key={index}>\r\n                                    {\r\n                                        props.edit ?\r\n                                            <span onClick={() => deleteAchivement(index)} style={{ marginRight: '10px', color: 'tomato', cursor: 'pointer' }}><MdDelete size={24} /></span> : null\r\n                                    }\r\n                                    <Accordion.Item eventKey={index} style={{ width: '100%' }}>\r\n                                        <Accordion.Header>\r\n                                            {achievement.title}\r\n                                        </Accordion.Header>\r\n                                        <Accordion.Body>\r\n                                            <Form.Control\r\n                                                as='textarea'\r\n                                                rows={3}\r\n                                                defaultValue={achievement.description}\r\n                                                onChange={(e) => { updateAchivement(index, e.target.value); props.setDirty() }}\r\n                                                placeholder=\"Describe about your achievement....\"\r\n                                                style={{ fontSize: '14px', marginBottom: '10px' }}\r\n                                                disabled={!props.edit}\r\n                                            />\r\n                                        </Accordion.Body>\r\n                                    </Accordion.Item>\r\n                                </div>\r\n                            })}\r\n                        </Accordion>\r\n                }\r\n                {\r\n                    props.edit ?\r\n                        addNew ?\r\n                            <div style={{ marginTop: '20px' }}>\r\n                                <Button size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px' }} onClick={addAchievement}>push</Button>\r\n                                <Button variant=\"light\" size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px', marginRight: '10px' }} onClick={() => { setaddNew(false); props.setPristine() }}>cancel</Button>\r\n                            </div>\r\n                            :\r\n                            <Button size=\"sm\" style={{ float: 'right', width: '100px', borderRadius: '25px', marginTop: '20px' }} onClick={() => setaddNew(true)}>+ Add</Button>\r\n\r\n                        : null\r\n                }\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Achievements","import React, { useEffect, useState } from 'react';\r\nimport { Prompt } from 'react-router-dom'\r\n\r\nconst useUnsavedChangesWarning = (message = \"Are you sure want to discard changes\") => {\r\n    const [isDirty, setisDirty] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Detecting browser closing\r\n        window.onbeforeunload = isDirty && (() => message)\r\n        return () => {\r\n            window.onbeforeunload = null\r\n        }\r\n    }, [isDirty, message]);\r\n\r\n    const routerPrompt = <Prompt when={false} message={message}/>\r\n    return [routerPrompt, () => setisDirty(true), () => setisDirty(false), isDirty];\r\n};\r\n\r\nexport default useUnsavedChangesWarning;","import React, { useEffect, useState } from 'react';\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nconst Toast = ({ value, callback, children }) => {\r\n    const [show, setShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (value === true) {\r\n            setShow(true);\r\n            setTimeout(() => setShow(false), 1000);\r\n            callback(false);\r\n        }\r\n    }, [value, callback])\r\n    \r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={() => setShow(false)} className=\"Toast\">\r\n                <Modal.Body>\r\n                    {children}  \r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Toast","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Nav, Spinner } from 'react-bootstrap';\r\nimport axios from '../../axios';\r\nimport ProfileBanner from './ProfileBanner.js';\r\nimport PersonalProfile from './PersonalProfile.js';\r\nimport EducationDetails from './EducationDetails.js';\r\nimport Skills from './Skills.js';\r\nimport SocialMedia from './SocialMedia';\r\nimport Hobbies from './Hobbies.js';\r\nimport Projects from './Projects.js';\r\nimport Internships from './Internships.js';\r\nimport Certifications from './Certifications.js';\r\nimport Achievements from './Achievements.js';\r\nimport useUnsavedChangesWarning from '../helpers/useUnsavedChangesWarning.js';\r\nimport Toast from '../helpers/Toast.js';\r\nimport { BsPatchCheckFill } from 'react-icons/bs';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet'\r\n\r\n\r\nconst Profile = (props) => {\r\n    const [Token, setToken] = useState(null);\r\n    const [edit, setEdit] = useState(false);\r\n    const [profileData, setprofileData] = useState(null);\r\n    const [updatedProfile, setupdatedProfile] = useState({});\r\n    const [loader, setloader] = useState(false);\r\n\r\n    const [toast, setToast] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.location.search === '?edit=true') {\r\n            setEdit(true);\r\n        } else {\r\n            setEdit(false);\r\n        }\r\n    }, [props.location])\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('auth-token');\r\n        setToken(token)\r\n        if (!token) {\r\n            props.history.push('/login')\r\n        }\r\n    }, [Token, props.history]);\r\n\r\n    useEffect(() => {\r\n        const url = '/students/mydata'\r\n        axios.get(url, {\r\n            headers: {\r\n                \"auth-token\": localStorage.getItem('auth-token')\r\n            }\r\n        }).then((res) => {\r\n            setprofileData(res.data)\r\n        }).catch((err) => {\r\n            if (!err.request.data) Logout();\r\n        });\r\n    }, []);\r\n\r\n\r\n    const handleChanges = async () => {\r\n        if (isDirty) {\r\n            setPristine();\r\n            setloader(true);\r\n            const url = '/students/'\r\n            await axios.patch(url, updatedProfile, {\r\n                headers: {\r\n                    \"auth-token\": localStorage.getItem('auth-token')\r\n                }\r\n            }).then((res) => {\r\n                setloader(false);\r\n                setToast(true);\r\n            }).catch((err) => {\r\n                setloader(false);\r\n                console.log(err)\r\n            })\r\n        }\r\n        props.history.push('/dashboard/profile');\r\n    }\r\n\r\n    const Logout = () => {\r\n        setToken('')\r\n        localStorage.removeItem('auth-token')\r\n    }\r\n\r\n    const [Prompt, setDirty, setPristine, isDirty] = useUnsavedChangesWarning();\r\n\r\n    // Tabs code\r\n    const [tab, setTab] = useState(0);\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Student Profile | TPC</title>\r\n            </Helmet>\r\n            <div className=\"profile\">\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col xs={12} lg=\"8\">\r\n                        <ProfileBanner isDirty={isDirty} setPristine={setPristine} setDirty={setDirty} handleChanges={handleChanges} loader={loader} edit={edit} setEdit={setEdit} logout={Logout} profileData={profileData} updatedProfile={updatedProfile} setupdatedProfile={setupdatedProfile} />\r\n                        <br />\r\n                        <Nav fill variant=\"pills\" defaultActiveKey={tab}>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"0\" onClick={() => setTab(0)}>Personal</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"1\" onClick={() => setTab(1)}>Skills</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"2\" onClick={() => setTab(2)}>Education</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey=\"3\" onClick={() => setTab(3)}>Feats</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        <hr />\r\n                        {\r\n                            tab === 0\r\n                                ?\r\n                                <>\r\n                                    {profileData ?\r\n                                        <>\r\n                                            <PersonalProfile setDirty={setDirty} edit={edit} profileData={profileData} updatedProfile={updatedProfile} setupdatedProfile={setupdatedProfile} />\r\n                                            <Hobbies setDirty={setDirty} edit={edit} profileData={profileData} updatedProfile={updatedProfile} setupdatedProfile={setupdatedProfile} />\r\n                                            <SocialMedia setDirty={setDirty} edit={edit} profileData={profileData} updatedProfile={updatedProfile} setupdatedProfile={setupdatedProfile} />\r\n                                        </>\r\n                                        : <div style={{ minHeight: '20vh', textAlign: 'center' }}>\r\n                                            <center style={{ marginTop: '80px' }}>\r\n                                                <Spinner size='xl' animation='grow' /><br /><br />\r\n                                                Retrieving data...\r\n                                            </center>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                                :\r\n                                tab === 1 ?\r\n                                    <>\r\n                                        <Skills setPristine={setPristine} setDirty={setDirty} edit={edit} profileData={profileData} updatedProfile={updatedProfile} setupdatedProfile={setupdatedProfile} />\r\n                                    </>\r\n                                    :\r\n                                    tab === 2 ?\r\n                                        <>\r\n                                            <EducationDetails setDirty={setDirty} edit={edit} profileData={profileData} updatedProfile={updatedProfile} setupdatedProfile={setupdatedProfile} />\r\n                                        </>\r\n                                        :\r\n                                        tab === 3 ?\r\n                                            <>\r\n                                                <Projects setPristine={setPristine} setDirty={setDirty} edit={edit} profileData={profileData} updatedProfile={updatedProfile} setupdatedProfile={setupdatedProfile} />\r\n                                                <Internships setPristine={setPristine} setDirty={setDirty} edit={edit} profileData={profileData} updatedProfile={updatedProfile} setupdatedProfile={setupdatedProfile} />\r\n                                                <Certifications setPristine={setPristine} setDirty={setDirty} edit={edit} profileData={profileData} updatedProfile={updatedProfile} setupdatedProfile={setupdatedProfile} />\r\n                                                <Achievements setPristine={setPristine} setDirty={setDirty} edit={edit} profileData={profileData} updatedProfile={updatedProfile} setupdatedProfile={setupdatedProfile} />\r\n                                            </> : null\r\n\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                {Prompt}\r\n                <Toast value={toast} callback={setToast}>\r\n                    <BsPatchCheckFill size={18} style={{ color: '#32CD32' }} /> &nbsp; Changes Saved\r\n                </Toast>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Profile)","import axios from '../../axios';\r\nimport React, { useState } from 'react';\r\nimport { Row, Col, ListGroup, Button, Form } from 'react-bootstrap';\r\nimport Toast from '../helpers/Toast';\r\nimport { BsPatchCheckFill } from 'react-icons/bs';\r\nimport { BiLinkExternal } from 'react-icons/bi'\r\n\r\nconst Home = (props) => {\r\n  const [feedback, setfeedback] = useState('');\r\n  const [toast, setToast] = useState(false);\r\n\r\n  const sendFeedback = () => {\r\n    const url = '/students/feedback';\r\n    axios.post(url, {\r\n      idNo: props.idNo,\r\n      message: feedback\r\n    }, {\r\n      headers: {\r\n        \"auth-token\": localStorage.getItem('auth-token')\r\n      }\r\n    })\r\n      .then((res) => {\r\n        setToast(true);\r\n        setfeedback('');\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col sm={12} lg={8}>\r\n          <div className=\"header\">\r\n            <p className=\"Title\">Hello! <br /><span>{props.username ? props.username : <span style={{ fontSize: '16px' }}>loading...</span>}</span></p>\r\n          </div>\r\n          <Row className=\"view-profile-banner\">\r\n            <a href={`/view-profile/${props.id}`} target=\"_blank\" rel=\"noopener noreferrer\">View and share your profile <BiLinkExternal /></a>\r\n          </Row>\r\n          <p className=\"heading\">To Do's</p>\r\n          <p className=\"message\">Things you need to complete</p>\r\n          <div className=\"box\">\r\n            <ListGroup numbered>\r\n              <ListGroup.Item as=\"li\" className=\"list-group-item\">Complete your profile by clicking on profile nav button (on top-right corner)<a href='/dashboard/profile'><BiLinkExternal className='externalicon' size={16} /></a></ListGroup.Item>\r\n              <ListGroup.Item as=\"li\" className=\"list-group-item\">Upload your profile image and describe yourself in bio</ListGroup.Item>\r\n              <ListGroup.Item as=\"li\" className=\"list-group-item\">Add your hobbies and social links (Github, LinkedIn, hackerrank, leetcode ...)</ListGroup.Item>\r\n              <ListGroup.Item as=\"li\" className=\"list-group-item\">Add your skills and rate them in skill section</ListGroup.Item>\r\n              <ListGroup.Item as=\"li\" className=\"list-group-item\">Add education details in education section</ListGroup.Item>\r\n              <ListGroup.Item as=\"li\" className=\"list-group-item\">Add your projects, internships, certifications and achievements in feats section</ListGroup.Item>\r\n            </ListGroup>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <p className=\"heading\">Send Feedback</p>\r\n          <p className=\"message\">Tell us what you feel</p>\r\n          <div style={{ borderRadius: '10px', border: '1px solid #c8c8c8', marginTop: '10px'}}>\r\n            <Form.Control\r\n              as='textarea'\r\n              rows={5}\r\n              value={feedback}\r\n              onChange={(e) => setfeedback(e.target.value)}\r\n              placeholder=\"Enter your valuable suggestions to improve our site...\"\r\n            />\r\n          </div>\r\n          <Button variant=\"primary\" size='lg' onClick={sendFeedback} style={{ marginTop: '20px', width: '100%', borderRadius: '10px' }}>\r\n            Submit\r\n          </Button>\r\n          <br />\r\n        </Col>\r\n      </Row>\r\n      <Toast value={toast} callback={setToast}>\r\n        <BsPatchCheckFill size={18} style={{ color: '#32CD32' }} /> &nbsp; FeedBack sent successfully\r\n      </Toast>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Spinner, Modal } from 'react-bootstrap';\r\nimport { TiWarningOutline } from 'react-icons/ti';\r\nimport { VscInfo } from 'react-icons/vsc';\r\nimport { IoMdCheckmarkCircleOutline } from 'react-icons/io'\r\nimport { HiOutlineClipboardList } from 'react-icons/hi';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Notifications = (props) => {\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('auth-token');\r\n    if (!token) {\r\n      props.history.push('/login')\r\n    }\r\n  }, [props.history]);\r\n\r\n  const onClickNotification = (x) => {\r\n    setData(x);\r\n    setShow(true);\r\n  }\r\n\r\n  const getDate = (x) => {\r\n\r\n    const date = new Date(x);\r\n\r\n    //Pad given value to the left with \"0\"\r\n    function AddZero(num) {\r\n      return (num >= 0 && num < 10) ? \"0\" + num : num + \"\";\r\n    }\r\n    \r\n    var strDateTime = [[AddZero(date.getDate()),\r\n    AddZero(date.getMonth() + 1),\r\n    date.getFullYear()].join(\"/\"),\r\n    [AddZero(date.getHours()),\r\n    AddZero(date.getMinutes())].join(\":\"),\r\n    date.getHours() >= 12 ? \"PM\" : \"AM\"].join(\" \");\r\n    \r\n    return strDateTime\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Notifications | TPC</title>\r\n      </Helmet>\r\n      <div className=\"Notifications\">\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs lg=\"8\">\r\n            {props.notifications ? props.notifications === 'error' ?\r\n              <p style={{ textAlign: 'center' }}>Error loading data</p>\r\n              :\r\n              props.notifications.length === 0 ? <p style={{ textAlign: 'center' }}>No current notifications</p> :\r\n                props.notifications.map((notifier, index) => (\r\n                  <div key={index} style={{ margin: '30px 0' }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                      <p style={{ margin: '0px', fontSize: '10px', color: '#6b818b', fontWeight: 'bold' }}>{getDate(notifier.createdAt)}</p>\r\n                    </div>\r\n                    <Row className=\"notifier\">\r\n                      <Col md={1} xs={2} className=\"notifier-typo\">\r\n                        {\r\n                          notifier.type === 'warning' ?\r\n                            <TiWarningOutline size={24} /> :\r\n                            notifier.type === 'info' ?\r\n                              <VscInfo size={24} /> :\r\n                              notifier.type === 'success' ?\r\n                                <IoMdCheckmarkCircleOutline size={24} />\r\n                                : notifier.type === 'test' ?\r\n                                  <HiOutlineClipboardList size={24} /> : null\r\n\r\n                        }\r\n\r\n                      </Col>\r\n                      <Col xs={10} md={11} className=\"notifier-body align-self-center\" onClick={() => onClickNotification(notifier)}>\r\n                        <p className=\"title\">{notifier.title.toUpperCase()}</p>\r\n                        <p className=\"description\">{notifier.description}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                )) :\r\n              <div style={{ minHeight: '20vh', textAlign: 'center' }}>\r\n                <center style={{ marginTop: '80px' }}>\r\n                  <Spinner size='xl' animation='grow' /><br /><br />\r\n                  Retrieving data...\r\n                </center>\r\n              </div>\r\n            }\r\n          </Col>\r\n        </Row>\r\n        <Modal show={show} onHide={() => setShow(false)}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n\r\n          <Modal.Body>\r\n            <p style={{ fontWeight: 'bold' }}>{data ? data.title.toUpperCase() : 'loading...'}</p>\r\n            <hr />\r\n            {data ? data.description : 'loading...'}\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div >\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>&copy; {new Date(Date.now()).getFullYear()} reserved by <a href=\"https://rguktsklm.ac.in\" target=\"_blank\" rel=\"noopener noreferrer\">RGUKT SKLM</a> CSE Dept. | <a href=\"/tpc-technical-team\" target=\"_blank\" rel=\"noopener noreferrer\">TPC Technical Team</a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport { Image } from 'react-bootstrap';\r\nimport PageNotFoundImg from '../assets/404.svg'\r\n\r\nfunction PageNotFound() {\r\n  return (\r\n    <div className=\"page-not-found\">\r\n      <Image src={PageNotFoundImg} />\r\n      <p>Page Not Found</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageNotFound","import React, { useEffect, useState } from 'react';\r\nimport { withRouter, Switch, Route } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport Navbar from '../components/helpers/Navbar';\r\nimport Profile from '../components/Profile';\r\nimport Home from '../components/Home';\r\nimport Notifications from '../components/Notifications';\r\nimport Footer from '../components/helpers/Footer';\r\nimport PageNotFound from '../pages/PageNotFound';\r\nimport axios from '../axios';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Dashboard = (props) => {\r\n    const [username, setusername] = useState('');\r\n    const [idNo, setidNo] = useState('');\r\n    const [id, setId] = useState(null);\r\n\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [isNew, setisNew] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('auth-token');\r\n        if (!token) {\r\n            props.history.push('/login')\r\n        }\r\n    }, [props.history]);\r\n\r\n    useEffect(() => {\r\n        const url = '/students/mydata'\r\n        axios.get(url, {\r\n            headers: {\r\n                \"auth-token\": localStorage.getItem('auth-token'),\r\n            }\r\n        }).then((res) => {\r\n            setusername(res.data.name)\r\n            setidNo(res.data.idNo)\r\n            setId(res.data._id)\r\n        }).catch((err) => {\r\n            if (!err.request.data) Logout();\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const url = '/students/notifications'\r\n        axios.get(url).then((res) => {\r\n            setNotifications(res.data.message)\r\n            if (localStorage.getItem('notifications')) {\r\n                if (localStorage.getItem('notifications') < res.data.message.length) {\r\n                    setisNew(true)\r\n                }\r\n            } else {\r\n                localStorage.setItem('notifications', res.data.message.length)\r\n            }\r\n        }).catch((err) => {\r\n            setNotifications('error')\r\n        });\r\n    }, []);\r\n\r\n    const Logout = () => {\r\n        localStorage.removeItem('auth-token')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Student Dashboard | TPC</title>\r\n            </Helmet>\r\n            <div className=\"Dashboard\">\r\n                <Navbar isNew={isNew} setisNew={setisNew} notificationsLength={notifications.length} />\r\n                <Container>\r\n                    <Switch>\r\n                        <Route exact path='/dashboard' render={() => <Home username={username} id={id} idNo={idNo} />}></Route>\r\n                        <Route exact path='/dashboard/notifications' render={() => <Notifications history={props.history} notifications={notifications} />}></Route>\r\n                        <Route exact path='/dashboard/profile' render={() => <Profile history={props.history} />}></Route>\r\n                        <Route path=\"*\" render={() => <PageNotFound />} />\r\n                    </Switch>\r\n                </Container>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(Dashboard);","import React, { useEffect, useState, useRef } from 'react'\r\nimport { Row, Col, Image, Spinner } from 'react-bootstrap';\r\nimport axios, { uri } from '../../axios';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport { Helmet } from 'react-helmet'\r\n\r\n\r\nconst ViewProfile = (props) => {\r\n    const [profile, setProfile] = useState(null);\r\n    const [err, setErr] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const url = '/students/view-profile/' + props.match.params.id\r\n        axios.get(url, {\r\n            headers: {\r\n                \"auth-token\": localStorage.getItem('admin-token') || localStorage.getItem('auth-token')\r\n            }\r\n        }).then((res) => {\r\n            setProfile(res.data)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setErr(err.message)\r\n        });\r\n    }, []);\r\n\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n    return (\r\n\r\n        !err ?\r\n            !profile ?\r\n                <div style={{ marginTop: '20px', textAlign: 'center', fontSize: '16px', fontWeight: 'bold' }}><Spinner animation=\"border\" size='sm' /> &nbsp; Loading Data...</div>\r\n                :\r\n                <>\r\n                    <Helmet>\r\n                        <title>{profile.name} | Profile</title>\r\n                    </Helmet>\r\n                    <Row className=\"view-profile justify-content-md-center\" ref={componentRef}>\r\n                        <Col md={8}>\r\n                            <div className=\"header\">\r\n                                <div className=\"header-left\">\r\n                                    <p className=\"user-name\">{profile.name}</p>\r\n                                    <p>{profile.email}</p>\r\n                                </div>\r\n                                <div className=\"header-right\">\r\n                                    <Image src={profile.imageUrl ? `${uri}${profile.imageUrl}` : 'https://t4.ftcdn.net/jpg/00/65/77/27/360_F_65772719_A1UV5kLi5nCEWI0BNLLiFaBPEkUbv5Fv.jpg'} alt=\"profile-image\" height=\"100px\" style={{ borderRadius: '10px' }} />\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <main>\r\n                                {/* About Me */}\r\n                                {profile.bio || profile.hobbies.length > 0 || !profile.privacy ?\r\n                                    <div className=\"section\">\r\n                                        <div className=\"section-title\" >\r\n                                            <p className=\"heading\">About Me</p>\r\n                                        </div>\r\n                                        <div className=\"section-content\" >\r\n                                            <div className=\"description\">\r\n                                                {profile.bio ? <p>{profile.bio}</p> : null}\r\n                                                {\r\n                                                    profile.privacy ? null :\r\n                                                        <div style={{ marginBottom: '15px' }}>\r\n                                                            {profile.contactNumber ? <p className=\"sub-heading\">Contact Number: <i style={{ fontSize: '14px', fontWeight: '500', divor: '#6b818b' }}>+91 {profile.contactNumber}</i></p> : null}\r\n                                                            {profile.dob ? <p className=\"sub-heading\">Date of Birth: <i style={{ fontSize: '14px', fontWeight: '500', divor: '#6b818b' }}>{profile.dob}</i></p> : null}\r\n                                                            {profile.address ? <p className=\"sub-heading\">Address: <i style={{ fontSize: '14px', fontWeight: '500', divor: '#6b818b' }}>{profile.address}</i></p> : null}\r\n                                                        </div>\r\n                                                }\r\n                                                {profile.hobbies.length > 0 ?\r\n                                                    <>\r\n                                                        <p className=\"sub-heading\">My Hobbies</p>\r\n                                                        <p>{profile.hobbies.map((hobbie, id) => (<span key={id}>{hobbie}, </span>))}</p>\r\n                                                    </>\r\n                                                    : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : null\r\n                                }\r\n                                {/* Education */}\r\n                                {profile.graduation.name !== '' || profile.preGraduation.name !== '' || profile.schooling.name !== '' ?\r\n\r\n                                    <div className=\"section\">\r\n                                        <div className=\"section-title\" >\r\n                                            <p className=\"heading\">EDUCATION</p>\r\n                                        </div>\r\n                                        <div className=\"section-content\" >\r\n                                            <div className=\"description\">\r\n                                                {profile.graduation.name ?\r\n                                                    <>\r\n                                                        <p className=\"sub-heading\">B.Tech, Computer Science & Engineering</p>\r\n                                                        <p>{profile.graduation.name}</p>\r\n                                                        <p>CGPA : {profile.graduation.cgpa}</p>\r\n                                                        <p>{profile.graduation.loc}</p>\r\n                                                    </>\r\n                                                    : null\r\n                                                }\r\n                                                {\r\n                                                    profile.preGraduation.name ?\r\n                                                        <>\r\n                                                            <p className=\"sub-heading\" style={{ marginTop: '20px' }}>Pre - University</p>\r\n                                                            <p>{profile.preGraduation.name}</p>\r\n                                                            <p>Passout Year: {profile.preGraduation.passout}</p>\r\n                                                            <p>CGPA : {profile.preGraduation.cgpa}</p>\r\n                                                            <p>{profile.preGraduation.loc}</p>\r\n                                                        </>\r\n                                                        : null\r\n                                                }\r\n                                                {\r\n                                                    profile.schooling.name ?\r\n                                                        <>\r\n                                                            <p className=\"sub-heading\" style={{ marginTop: '20px' }}>Schooling</p>\r\n                                                            <p>{profile.schooling.name}</p>\r\n                                                            <p>Passout Year: {profile.schooling.passout}</p>\r\n                                                            <p>CGPA : {profile.schooling.cgpa}</p>\r\n                                                            <p>{profile.schooling.loc}</p>\r\n                                                        </>\r\n                                                        : null\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : null\r\n                                }\r\n                                {/* Technical Skills */}\r\n                                {profile.hardSkills.length > 0 ?\r\n                                    <div className=\"section\">\r\n                                        <div className=\"section-title\" >\r\n                                            <p className=\"heading\">Technical Skills</p>\r\n                                        </div>\r\n                                        <div className=\"section-content\" >\r\n                                            <div className=\"description\">\r\n                                                {\r\n                                                    profile.hardSkills.map((skill, id) => {\r\n                                                        return (\r\n                                                            skill.data.length > 0 ?\r\n                                                                <div key={id} style={{ marginBottom: '15px' }}>\r\n                                                                    <p className=\"sub-heading\">{skill.title}</p>\r\n                                                                    {\r\n                                                                        skill.data.map((dataItem, id) => (\r\n                                                                            <p key={id}>{dataItem.name}\r\n                                                                                {dataItem.level ? <> : <i>{dataItem.level}{dataItem.tools ? ` - ${dataItem.tools}` : null}</i></> : null}\r\n                                                                                {dataItem.description ? <><br /> <span style={{ marginLeft: '10px' }}>{dataItem.description}</span></> : null}\r\n                                                                            </p>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </div>\r\n                                                                : null\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : null}\r\n                                {/* SoftSkills */}\r\n                                {\r\n                                    profile.softSkills.length > 0 ?\r\n                                        <div className=\"section\">\r\n                                            <div className=\"section-title\" >\r\n                                                <p className=\"heading\">Soft Skills</p>\r\n                                            </div>\r\n                                            <div className=\"section-content\" >\r\n                                                <div className=\"description\">\r\n                                                    {\r\n                                                        profile.softSkills.map((skill, id) => {\r\n                                                            if (skill.title === 'Language Proficiency') {\r\n                                                                return (\r\n                                                                    skill.data.length > 0 ?\r\n                                                                        <div key={id} style={{ marginBottom: '20px' }}>\r\n                                                                            <p className=\"sub-heading\">{skill.title}</p>\r\n\r\n                                                                            {skill.data.map((dataItem, id) => (\r\n                                                                                <p key={id}>{dataItem.name}\r\n                                                                                    {dataItem.level ? <> : <i>{dataItem.level}</i></> : null}\r\n                                                                                </p>\r\n                                                                            ))}\r\n                                                                        </div> : null\r\n                                                                )\r\n                                                            }\r\n                                                            return (\r\n                                                                <div key={id} style={{ marginBottom: '20px' }}>\r\n                                                                    <p className=\"sub-heading\">{skill.title} : <i style={{ fontSize: '14px', fontWeight: '500', divor: '#6b818b' }}>{skill.level}</i></p>\r\n                                                                </div>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> : null\r\n                                }\r\n                                {/* projects */}\r\n                                {profile.projects.length > 0 ?\r\n                                    <div className=\"section\">\r\n                                        <div className=\"section-title\" >\r\n                                            <p className=\"heading\">Projects</p>\r\n                                        </div>\r\n                                        <div className=\"section-content\" >\r\n                                            <div className=\"description\">\r\n                                                {profile.projects.map((project) => (\r\n                                                    <div style={{ marginBottom: '20px' }} key={project.title}>\r\n                                                        <p className=\"sub-heading\">{project.title}</p>\r\n                                                        <p>{project.description}</p>\r\n                                                        <p>Techinologies used : {project.technologies}</p>\r\n                                                        {project.link ? <a href={project.link}>Know more..</a> : null}\r\n                                                    </div>\r\n                                                ))}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : null\r\n                                }\r\n                                {/* Intenships */}\r\n                                {profile.internships.length > 0 ?\r\n                                    <div className=\"section\">\r\n                                        <div className=\"section-title\" >\r\n                                            <p className=\"heading\">Internships</p>\r\n                                        </div>\r\n                                        <div className=\"section-content\" >\r\n                                            <div className=\"description\">\r\n                                                {profile.internships.map((internship) => (\r\n                                                    <div style={{ marginBottom: '20px' }} key={internship.organization}>\r\n                                                        <p className=\"sub-heading\">Role : {internship.role}</p>\r\n                                                        <p>Company : {internship.organization}</p>\r\n                                                        <p>Duration : {internship.duration} months</p>\r\n                                                        <p>Status : {internship.status}</p>\r\n                                                        <p>{internship.status === 'working' ? `Joined on ${internship.startDate}` : `${internship.startDate} - ${internship.endDate}`}</p>\r\n                                                        {profile.certificate ? <a href={profile.certificate}>View certificate</a> : null}\r\n                                                    </div>\r\n                                                ))\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : null}\r\n                                {/* Certifications */}\r\n                                {profile.certifications.length > 0 ?\r\n                                    <div className=\"section\">\r\n                                        <div className=\"section-title\" >\r\n                                            <p className=\"heading\">Certifications</p>\r\n                                        </div>\r\n                                        <div className=\"section-content\" >\r\n                                            <div className=\"description\">\r\n                                                {profile.certifications.map((item) => (\r\n                                                    <div style={{ marginBottom: '20px' }} key={item.title}>\r\n                                                        <p className=\"sub-heading\">{item.title}</p>\r\n                                                        <p>Certiified by {item.organization}</p>\r\n                                                        <p>Status : {item.status}</p>\r\n                                                        <p>{item.status === 'working' ? `Joined on ${item.startDate}` : `${item.startDate} - ${item.endDate}`}</p>\r\n                                                        {item.link ? <a href={item.link}>View certificate</a> : null}\r\n                                                    </div>\r\n                                                ))\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : null}\r\n                                {/* Achievements */}\r\n                                {profile.achievements.length > 0 ?\r\n                                    <div className=\"section\">\r\n                                        <div className=\"section-title\" >\r\n                                            <p className=\"heading\">Achievements</p>\r\n                                        </div>\r\n                                        <div className=\"section-content\" >\r\n                                            <div className=\"description\">\r\n                                                {profile.achievements.map((project) => (\r\n                                                    <div style={{ marginBottom: '20px' }} key={project.title}>\r\n                                                        <p className=\"sub-heading\">{project.title}</p>\r\n                                                        <p>{project.description}</p>\r\n                                                    </div>\r\n                                                ))\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : null}\r\n                                {/* External Links */}\r\n                                {profile.links.length > 0 ?\r\n                                    <div className=\"section\">\r\n                                        <div className=\"section-title\">\r\n                                            <p className=\"heading\">External Links & <br /> Work Samples</p>\r\n                                        </div>\r\n                                        <div className=\"section-content\">\r\n                                            <div className=\"description\">\r\n                                                {profile.links.map((link) => (\r\n                                                    <div key={link} style={{ marginBottom: '20px' }}>\r\n                                                        <p className=\"sub-heading\">\r\n                                                            {link.includes('github') ?\r\n                                                                'Github' :\r\n                                                                link.includes('linkedin') ?\r\n                                                                    'LinkedIn' :\r\n                                                                    link.includes('hackerrank') ? 'HackerRank' : link.includes('leetcode') ? 'LeetCode' : link.includes('youtube') ? 'YouTube' : 'Link'}</p>\r\n                                                        <a href={link}>{link}</a>\r\n                                                    </div>\r\n                                                ))\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : null}\r\n                            </main>\r\n                        </Col>\r\n                    </Row >\r\n                    {props.id === props.match.params.id ? <Row className=\"download-resume justify-content-md-center\">\r\n                        <hr />\r\n                        <p style={{ textAlign: 'center', width: '100%', color: '#3c4852', fontSize: '16px', fontWeight: '600', cursor: 'pointer' }} onClick={handlePrint}>Download Resume</p>\r\n                    </Row> : null}\r\n                </>\r\n            :\r\n            <div style={{ marginTop: '16px', textAlign: 'center', fontSize: '16px', fontWeight: 'bold' }}>Error Loading data...</div>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewProfile)","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport axios from '../../axios';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Adminlogin = (props) => {\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [error, seterror] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('admin-token')) {\r\n            props.history.push('/admin/dashboard');\r\n        }\r\n    }, []);\r\n\r\n    const login = () => {\r\n        if (username === '' || password === '') {\r\n            seterror('Please fill all the fields');\r\n            return;\r\n        }\r\n        const url = '/admin/login'\r\n        axios.post(url, {\r\n            \"username\": username,\r\n            \"password\": password\r\n        })\r\n            .then((res) => {\r\n                console.log(res)\r\n                localStorage.setItem('admin-token', res.data.token)\r\n                props.history.push('/admin/dashboard')\r\n            })\r\n            .catch((err) => {\r\n                if (err) {\r\n                    seterror(err.response.data.message)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container card' style={{ marginTop: '100px', padding: '50px 20px ' }}>\r\n            <center>\r\n                <img alt=\"admin\" src=\"https://img.icons8.com/dotty/80/undefined/admin-settings-male.png\" height=\"120\" style={{ marginBottom: '30px' }} />\r\n                <Form as={Col} sm={3}>\r\n                    <Form.Group>\r\n                        <Form.Label style={{ float: 'left' }}>Username</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder='Enter username' value={username} onChange={(e) => setusername(e.target.value)} />\r\n                    </Form.Group><br />\r\n                    <Form.Group>\r\n                        <Form.Label style={{ float: 'left' }}>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder='Enter password' value={password} onChange={(e) => setpassword(e.target.value)} />\r\n                    </Form.Group><br />\r\n                    <p style={{ color: 'tomato' }}>{error}</p>\r\n                    <Button onClick={login} style={{ borderRadius: '20px', padding: '5px 20px', marginTop: '30px' }} variant=\"success\">Login</Button>\r\n                </Form>\r\n            </center>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(Adminlogin);","import React, { useEffect } from 'react';\r\nimport { Row, Col, Container, Card, Image, Button } from 'react-bootstrap';\r\nimport NotificationImage from '../../assets/notification.png';\r\nimport EmailImage from '../../assets/email.png';\r\nimport ListStudents from '../../assets/customer.png';\r\nimport FeedbackImage from '../../assets/feedback.png';\r\nimport { BiExit } from 'react-icons/bi'\r\n\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Admin = (props) => {\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('admin-token')) {\r\n            props.history.push('/admin/login');\r\n        }\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <HomePage props={props} />\r\n    );\r\n};\r\n\r\nconst HomePage = () => {\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('admin-token');\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Admin Dashboard | TPC</title>\r\n            </Helmet>\r\n            <Container className='Admin' style={{ marginTop: '50px' }}>\r\n                <Row className='justify-content-md-center'>\r\n                    <Col xs=\"12\" lg=\"8\">\r\n                        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                            <p style={{ fontSize: '28px', fontWeight: 'bold', marginLeft: '20px' }}>Admin Dashboard</p>\r\n                            <Button style={{ background: 'tomato' }} onClick={logout}><BiExit size={20} />&nbsp;Logout</Button>\r\n                        </div>\r\n                        <Row style={{ marginTop: '30px' }} className=\"gx-2\">\r\n                            <Col md={6} sm={12} className=\"p-3\">\r\n                                <Card body as={Link} to='/admin/dashboard/send-notification'>\r\n                                    <Row className=\"inernal-row\">\r\n                                        <Col xs={2} className=\"align-self-center\">\r\n                                            <Image src={NotificationImage} alt=\"notification image\" fluid style={{ maxHeight: '40px' }} />\r\n                                        </Col>\r\n                                        <Col xs={10} className=\"align-self-center\">\r\n                                            <p className=\"heading\">Send Notifications</p>\r\n                                            <p className=\"sub-heading\">Admin can send notification directly to the student dahboard.</p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md={6} sm={12} className=\"p-3\">\r\n                                <Card body as={Link} to='/admin/dashboard/send-mail'>\r\n                                    <Row className=\"inernal-row\">\r\n                                        <Col xs={2} className=\"align-self-center\">\r\n                                            <Image src={EmailImage} alt=\"notification image\" fluid style={{ maxWidth: '40px' }} />\r\n                                        </Col>\r\n                                        <Col xs={10} className=\"align-self-center\">\r\n                                            <p className=\"heading\">Send Email</p>\r\n                                            <p className=\"sub-heading\">Admin can send emails to the students selectively.</p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md={6} sm={12} className=\"p-3\">\r\n                                <Card body as={Link} to='/admin/dashboard/studentslist'>\r\n                                    <Row className=\"inernal-row\">\r\n                                        <Col xs={2} className=\"align-self-center\">\r\n                                            <Image src={ListStudents} alt=\"notification image\" fluid style={{ maxWidth: '40px' }} />\r\n                                        </Col>\r\n                                        <Col xs={10} className=\"align-self-center\">\r\n                                            <p className=\"heading\">Students List</p>\r\n                                            <p className=\"sub-heading\">Admin can get the students lists and can apply filters.</p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md={6} sm={12} className=\"p-3\">\r\n                                <Card body as={Link} to='/admin/dashboard/feedbacks'>\r\n                                    <Row className=\"inernal-row\">\r\n                                        <Col xs={2} className=\"align-self-center\">\r\n                                            <Image src={FeedbackImage} alt=\"notification image\" fluid style={{ maxWidth: '40px' }} />\r\n                                        </Col>\r\n                                        <Col xs={10} className=\"align-self-center\">\r\n                                            <p className=\"heading\">Student Feedbacks</p>\r\n                                            <p className=\"sub-heading\">See the feedbacks of the students recieved through website.</p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Admin);","import React, { useEffect } from 'react';\r\nimport { Row, Col, Image, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport CareerLogo from '../assets/career.svg';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst LandingPage = (props) => {\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('auth-token');\r\n        if (token) {\r\n            props.history.push('/dashboard')\r\n        }\r\n    }, [props.history]);\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"Home justify-content-md-center\" style={{ backgroundImage: \"url('https://img.freepik.com/free-vector/white-abstract-background_23-2148810113.jpg?w=2000')\" }}>\r\n                <Col className=\"right-side\" sm={12} md={8} style={{ padding: '0 10px' }}>\r\n                    <p className=\"banner-title\">Training and Placement Cell</p>\r\n                    <p className=\"banner-sub\">Computer Science & Engineering Dept.</p>\r\n                    <a href=\"https://rguktsklm.ac.in\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ fontSize: '16px', fontWeight: 'bold', color: '#625bf6', textAlign: 'center', textDecoration: 'none' }}>Rajiv Gandhi University of Knowledge Technologies Srikakulam</a>\r\n                    <Image src={CareerLogo} alt=\"career logo\" style={{ maxWidth: '350px', width: '100%', margin: '50px 0', padding: '10px' }} fluid />\r\n                    <p style={{ fontSize: '16px', color: '#6b818b', textAlign: 'center' }}>Success usually comes to those who are too busy to be looking for it..</p>\r\n                    <br />\r\n                    <Row style={{ maxWidth: '500px', width: '100%' }}>\r\n                        <Col>\r\n                            <Button style={{ fontSize: '16px', maxWidth: '250px', width: '100%', fontWeight: 'bold' }} as={Link} to=\"/login\">Login</Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button style={{ fontSize: '16px', maxWidth: '250px', width: '100%', fontWeight: 'bold' }} variant=\"outline-primary\" as={Link} to=\"/register\">Create Account</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LandingPage);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Container, Image, Spinner } from 'react-bootstrap'\r\nimport { BsPatchCheckFill } from 'react-icons/bs';\r\nimport Toast from '../../components/helpers/Toast';\r\nimport axios from '../../axios';\r\nimport NotificationImage from '../../assets/notification.png';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Notifications = (props) => {\r\n    const [title, settitle] = useState('');\r\n    const [description, setdescription] = useState('');\r\n    const [type, settype] = useState('');\r\n    const [externals, setexternals] = useState('');\r\n    const [toast, settoast] = useState(false);\r\n    const [sendMail, setsendMail] = useState(false);\r\n    const [loader, setloader] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('admin-token')) {\r\n            props.history.push('/admin/login');\r\n        }\r\n    }, []);\r\n\r\n    const sendNotification = (e) => {\r\n        e.preventDefault();\r\n        if (title === '' || description === '' || type === '') {\r\n            alert('Please fill out all fields');\r\n            return;\r\n        }\r\n        setloader(true);\r\n        const url = '/admin/notifications'\r\n        axios.post(url, {\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"type\": type,\r\n            \"externals\": externals\r\n        }, {\r\n            headers: {\r\n                \"auth-token\": localStorage.getItem('admin-token')\r\n            }\r\n        })\r\n            .then((res) => {\r\n                if (sendMail) {\r\n                    sendMails()\r\n                } else {\r\n                    settoast(true);\r\n                    setloader(false);\r\n                }\r\n                settitle('')\r\n                setdescription('')\r\n                settype('')\r\n                setexternals('')\r\n            })\r\n            .catch((err) => { console.log(err); setloader(false) })\r\n    }\r\n\r\n    const sendMails = () => {\r\n        let emails = [];\r\n        axios.post('/admin/getStudents', {\r\n            \"reqparams\": \"email\"\r\n        }, {\r\n            headers: {\r\n                \"auth-token\": localStorage.getItem('admin-token')\r\n            }\r\n        })\r\n            .then((res) => {\r\n                res.data.map((data) => emails.push(data.email))\r\n                axios.post('/admin/sendmail', {\r\n                    subject: title,\r\n                    html: description,\r\n                    emails: emails\r\n                }, {\r\n                    headers: {\r\n                        \"auth-token\": localStorage.getItem(\"admin-token\")\r\n                    }\r\n                })\r\n                    .then((res) => { setsendMail(false); settoast(true); setloader(false); })\r\n                    .catch((err) => console.log(err))\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Send Notification | Admin</title>\r\n            </Helmet>\r\n            <Container className='Admin' style={{ marginTop: '50px' }}>\r\n                <Row className='justify-content-md-center'>\r\n                    <Col xs=\"12\" lg=\"8\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '50px' }}>\r\n                            <div style={{ marginRight: '20px' }}>\r\n                                <Image src={NotificationImage} alt=\"notification image\" fluid style={{ maxHeight: '60px' }} />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"heading\">Send Notifications</p>\r\n                                <p className=\"sub-heading\">Admin can send notification directly to the student dahboard.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ border: '1px solid #c8c8c8', padding: '20px', borderRadius: '10px', height: 'fit-content' }}>\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <Form.Label>Title</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder='Enter title of notification' value={title} onChange={(e) => settitle(e.target.value)} required />\r\n                                </Form.Group><br />\r\n                                <Form.Group>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows=\"3\" type=\"text\" placeholder='Enter description of notification' value={description} onChange={(e) => setdescription(e.target.value)} required />\r\n                                </Form.Group><br />\r\n                                <Row>\r\n                                    <Form.Group as={Col} sm={12} lg={6}>\r\n                                        <Form.Label>Type</Form.Label>\r\n                                        <Form.Select defaultValue=\"-- select --\" placeholder=\"Notification Type\" onChange={(e) => settype(e.target.value)} required>\r\n                                            <option disabled>-- select --</option>\r\n                                            <option value=\"info\">Info</option>\r\n                                            <option value=\"warning\">Warning</option>\r\n                                            <option value=\"success\">Success</option>\r\n                                            <option value=\"test\">Test</option>\r\n                                        </Form.Select>\r\n                                    </Form.Group><br />\r\n                                    <Form.Group as={Col} sm={12} lg={6}>\r\n                                        <Form.Label>External Links</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder='external links' value={externals} onChange={(e) => setexternals(e.target.value)} />\r\n                                    </Form.Group>\r\n                                    <Form.Group style={{ marginTop: '20px', display: 'flex' }}>\r\n                                        <input type='checkbox' style={{ width: '20px', marginRight: '10px' }} value={sendMail} onChange={(e) => setsendMail(e.target.checked)} />\r\n                                        <Form.Label style={{ marginTop: '14px' }}>Send Mail</Form.Label>\r\n                                    </Form.Group>\r\n                                </Row>\r\n                                <Row className=\"justify-content-md-center\" style={{ marginTop: '30px ' }}>\r\n                                    <Col xs={12}>\r\n                                        <Button size='lg' type='submit' variant='primary' onClick={(e) => sendNotification(e)} style={{ width: '100%' }}>{loader ? <Spinner animation=\"border\" size='sm' /> : 'Send Notification'}</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                        <Toast value={toast} callback={settoast}>\r\n                            <BsPatchCheckFill size={18} style={{ color: '#32CD32' }} /> &nbsp; Notification Sent Successfully\r\n                        </Toast>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Notifications)","import React, { useState, useEffect } from 'react';\r\nimport { Table, Form, Container, Image, Button } from 'react-bootstrap';\r\nimport axios from '../../axios';\r\nimport { Helmet } from 'react-helmet'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { BiLinkExternal } from 'react-icons/bi'\r\nimport ListStudents from '../../assets/customer.png';\r\n\r\nconst StudentList = (props) => {\r\n\r\n    const [students, setstudents] = useState([]);\r\n    const [filteredStudents, setfilteredStudents] = useState([]);\r\n    const [emails, setemails] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('admin-token')) {\r\n            props.history.push('/admin/login');\r\n        } else {\r\n            // fetch students\r\n            const url = '/students';\r\n            axios.get(url).then((res) => {\r\n                console.log(res.data);\r\n                setstudents(res.data)\r\n                setfilteredStudents(res.data)\r\n            })\r\n                .catch((err) => console.log(err))\r\n\r\n        }\r\n    }, []);\r\n\r\n    const [searchInput, setsearchInput] = useState('');\r\n    const searchStudents = () => {\r\n        let filteredStudents = students.filter(student => student.idNo.toUpperCase().includes(searchInput.toUpperCase()));\r\n        setfilteredStudents(filteredStudents);\r\n    }\r\n\r\n    const selectMail = (value, email) => {\r\n        if (value === true) {\r\n            setemails([...emails, email])\r\n        } else {\r\n            setemails(emails.filter(e => e !== email))\r\n        }\r\n    }\r\n\r\n    const selectAll = (value) => {\r\n        if (value === true) {\r\n            let emails = []\r\n            students.map(student => emails.push(student.email))\r\n            setemails(emails)\r\n            let checkbox = document.getElementsByName('checkbox')\r\n            for (let i = 0; i < checkbox.length; i++) {\r\n                checkbox[i].checked = true\r\n            }\r\n        } else {\r\n            setemails([])\r\n            let checkbox = document.getElementsByName('checkbox')\r\n            for (let i = 0; i < checkbox.length; i++) {\r\n                checkbox[i].checked = false\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Students List | Admin</title>\r\n            </Helmet>\r\n            <Container className=\"Admin\">\r\n                <div style={{ display: 'flex', alignItems: 'center', margin: '50px 0' }}>\r\n                    <div style={{ marginRight: '20px' }}>\r\n                        <Image src={ListStudents} alt=\"notification image\" fluid style={{ maxHeight: '50px' }} />\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"heading\">Students List</p>\r\n                        <p className=\"sub-heading\">Admin can get the students lists and can apply filters.</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"view-unavailable\">Content cannot be viewed in this screen.</div>\r\n                <div className=\"StudentList-Table\">\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                        <Form.Control style={{ maxWidth: '400px', margin: '20px 0' }} type=\"text\" onChange={(e) => setsearchInput(e.target.value)} onKeyUp={searchStudents} placeholder=\"Search Students By ID\" />\r\n                        {emails.length === 0 ? null : <Button style={{ float: 'right', height: '50px', marginTop: '20px' }} onClick={() => props.history.push('/admin/dashboard/send-mail', { emails: emails })}>Send Email</Button>}\r\n                    </div>\r\n                    <Table variant=\"dark\" striped hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th><input type='checkbox' style={{ width: '20px' }} onChange={(e) => selectAll(e.target.checked)} /><br />Select all</th>\r\n                                <th>ID</th>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th>Mobile</th>\r\n                                <th>Batch</th>\r\n                                <th>Year of Study</th>\r\n                                <th>Section</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {filteredStudents.map((student, i) =>\r\n                                <tr key={i}>\r\n                                    <td><input type='checkbox' style={{ width: '20px' }} name=\"checkbox\" onChange={(e) => selectMail(e.target.checked, student.email)} /></td>\r\n                                    <td>{student.idNo}</td>\r\n                                    <td>{student.name}</td>\r\n                                    <td>{student.email}</td>\r\n                                    <td>{student.contactNumber}</td>\r\n                                    <td>{student.batch}</td>\r\n                                    <td>{student.yearofStudy}</td>\r\n                                    <td>{student.section}</td>\r\n                                    <td><a style={{ textDecoration: 'none' }} target='_blank' rel='noreferrer noopener' href={`/view-profile/${student._id}`}>View profile <BiLinkExternal /></a></td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </Table><br />\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(StudentList)","import React, { useState, useEffect } from 'react'\r\nimport { Table, Container, Image } from 'react-bootstrap';\r\nimport axios from '../../axios';\r\nimport { Helmet } from 'react-helmet'\r\nimport FeedbackImage from '../../assets/feedback.png';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst SendFeedback = (props) => {\r\n    const [feedbacks, setfeedbacks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('admin-token')) {\r\n            props.history.push('/admin/login');\r\n        } else {\r\n            // fetch feedbacks \r\n            const url = '/admin/feedbacks';\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"auth-token\": localStorage.getItem('admin-token')\r\n                }\r\n            }).then((res) => {\r\n                setfeedbacks(res.data)\r\n            })\r\n                .catch((err) => console.log(err))\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Students Feedback | Admin</title>\r\n            </Helmet>\r\n            <Container className=\"Admin\">\r\n                <div style={{ display: 'flex', alignItems: 'center', margin: '50px 0' }}>\r\n                    <div style={{ marginRight: '20px' }}>\r\n                        <Image src={FeedbackImage} alt=\"notification image\" fluid style={{ maxHeight: '40px' }} />\r\n                    </div>\r\n                    <div>\r\n                        <p className=\"heading\">Student Feedbacks</p>\r\n                        <p className=\"sub-heading\">See the feedbacks of the students recieved through website.</p>\r\n                    </div>\r\n                </div>\r\n                <Table variant=\"dark\" striped hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>S.No</th>\r\n                            <th>Student Id</th>\r\n                            <th>Message</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {feedbacks.map((feedback, i) =>\r\n                            <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{feedback.idNo}</td>\r\n                                <td>{feedback.message}</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(SendFeedback)","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Container, Image, Spinner } from 'react-bootstrap'\r\nimport { BsPatchCheckFill } from 'react-icons/bs';\r\nimport Toast from '../../components/helpers/Toast';\r\nimport axios from '../../axios';\r\nimport EmailImage from '../../assets/email.png';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet'\r\n\r\n\r\nconst SendMail = (props) => {\r\n    const [subject, setsubject] = useState('');\r\n    const [body, setbody] = useState('');\r\n    const [mails, setmails] = useState('');\r\n    const [toast, settoast] = useState(false);\r\n    const [loader, setloader] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('admin-token')) {\r\n            props.history.push('/admin/login');\r\n        }\r\n        if (props.location.state) {\r\n            let emails = props.history.location.state.emails\r\n            setmails(emails)\r\n        }\r\n    }, []);\r\n\r\n    const sendMail = (e) => {\r\n        e.preventDefault()\r\n        if (subject === '' || body === '' || mails === '') {\r\n            alert('Please fill out all fields');\r\n            return;\r\n        }\r\n        setloader(true)\r\n        axios.post('/admin/sendmail', {\r\n            subject: subject,\r\n            emails: mails,\r\n            html: body\r\n        }, {\r\n            headers: {\r\n                \"auth-token\": localStorage.getItem(\"admin-token\")\r\n            }\r\n        })\r\n            .then((res) => {\r\n                setloader(false)\r\n                settoast(true);\r\n                setsubject('')\r\n                setbody('')\r\n                setmails('')\r\n            })\r\n            .catch((err) => { console.log(err); setloader(false) })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Send Mail | Admin</title>\r\n            </Helmet>\r\n            <Container className='Admin' style={{ marginTop: '50px' }}>\r\n                <Row className='justify-content-md-center'>\r\n                    <Col xs=\"12\" lg=\"8\">\r\n                        <div style={{ display: 'flex', alignItems: 'center', marginBottom: '50px' }}>\r\n                            <div style={{ marginRight: '20px' }}>\r\n                                <Image src={EmailImage} alt=\"email image\" fluid style={{ maxHeight: '60px' }} />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"heading\">Send Email</p>\r\n                                <p className=\"sub-heading\">Admin can send emails to the students selectively.</p>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ border: '1px solid #c8c8c8', padding: '20px', borderRadius: '10px', height: 'fit-content' }}>\r\n                            <Form>\r\n                                <Form.Group>\r\n                                    <Form.Label>Subject</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder='Enter subject of email' value={subject} onChange={(e) => setsubject(e.target.value)} required />\r\n                                </Form.Group><br />\r\n                                <Form.Group>\r\n                                    <Form.Label>Body</Form.Label>\r\n                                    <Form.Control type=\"text\" as='textarea' rows='5' placeholder='Enter body of email in html' value={body} onChange={(e) => setbody(e.target.value)} required />\r\n                                </Form.Group><br /><br />\r\n                                <Form.Group>\r\n                                    <Form.Label>Emails</Form.Label>\r\n                                    <Form.Control type='text' as='textarea' rows='3' placeholder='Add Emails of students, separate the emails with a comma' value={mails} onChange={(e) => setmails(e.target.value.trim())} required />\r\n                                </Form.Group>\r\n                                <Row className=\"justify-content-md-center\" style={{ marginTop: '30px ' }}>\r\n                                    <Col xs={12}>\r\n                                        <Button size='lg' type='submit' variant='primary' onClick={(e) => sendMail(e)} style={{ width: '100%' }}>{loader ? <Spinner animation=\"border\" size='sm' /> : 'Send Email'}</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                        <Toast value={toast} callback={settoast}>\r\n                            <BsPatchCheckFill size={18} style={{ color: '#32CD32' }} /> &nbsp; Emails Sent Successfully\r\n                        </Toast>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(SendMail);","import React from 'react';\r\nimport { Row, Col, Container, Card, Image } from 'react-bootstrap';\r\nimport DevaImage from '../assets/deva.jpg';\r\nimport TarunImage from '../assets/tarun.jpg';\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst TPC_Team = () => {\r\n    return (\r\n        <div className=\"TPC_Team\">\r\n            <Container>\r\n                <Helmet>\r\n                    <title>Techinical Team | TPC</title>\r\n                </Helmet>\r\n                <Row className=\"justify-content-md-center\" style={{ minHeight: '100vh' }}>\r\n                    <Col sm={12} md={8} className=\"align-self-center\">\r\n                        <p style={{ fontSize: '22px', fontWeight: 'bold', textAlign: 'center', marginTop:'30px' }}>TPC Techincal Team</p>\r\n                        <Card body>\r\n                            <Row>\r\n                                <Col md={4} sm={12}>\r\n                                    <Image src={DevaImage} fluid />\r\n                                </Col>\r\n                                <Col md={8} sm={12}>\r\n                                    <p className='heading'>Deva Raju</p>\r\n                                    <p className='sub-heading'>UI/UX Designer, Full Stack Developer</p>\r\n                                    <br />\r\n                                    <p className='sub-heading' style={{ color: '#3c4852' }}>Contact :</p>\r\n                                    <p>Rajiv Gandhi University of Knowledge Technologies Srikakulam</p>\r\n                                    <p>Email: <i>mdevaraju764@gmail.com</i></p>\r\n                                    <p>Mobile: <i>+91 7013240218</i></p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                        <Card body>\r\n                            <Row>\r\n                                <Col md={4} sm={12}>\r\n                                    <Image src={TarunImage} fluid />\r\n                                </Col>\r\n                                <Col md={8} sm={12}>\r\n                                    <p className='heading'>Tarun Babu</p>\r\n                                    <p className='sub-heading'>Full Stack Developer, Flutter Developer</p>\r\n                                    <br />\r\n                                    <p className='sub-heading' style={{ color: '#3c4852' }}>Contact :</p>\r\n                                    <p>Rajiv Gandhi University of Knowledge Technologies Srikakulam</p>\r\n                                    <p>Email: <i>tarunbabu856@gmail.com</i></p>\r\n                                    <p>Mobile: <i>+91 6300145448</i></p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TPC_Team","import {\r\n  Switch,\r\n  Route,\r\n  withRouter,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from './axios';\r\nimport Home from './pages/Home.js'\r\nimport Dashboard from './pages/Dashboard';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles.css';\r\nimport ViewProfile from './components/view-profile';\r\nimport PageNotFound from './pages/PageNotFound'\r\nimport Adminlogin from './pages/Admin/login.js';\r\nimport Admindashboard from './pages/Admin';\r\nimport LandingPage from './pages/LandingPage'\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport Notifications from './components/Admin/Notifications';\r\nimport StudentList from './components/Admin/StudentList';\r\nimport Feedback from './components/Admin/Feedback';\r\nimport SendMail from './components/Admin/SendMail';\r\nimport TechnicalTeam from './pages/TPC_Team';\r\n// import Alumini from './pages/Alumini/index';\r\n \r\nfunction App() {\r\n\r\n  const isMobile = useMediaQuery({ query: '(max-width: 576px)' })\r\n  const [id, setid] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('auth-token')) {\r\n      const url = '/students/mydata'\r\n      axios.get(url, {\r\n        headers: {\r\n          \"auth-token\": localStorage.getItem('auth-token'),\r\n        }\r\n      }).then((res) => {\r\n        setid(res.data._id)\r\n      })\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Switch>\r\n      {isMobile ? <Route exact path=\"/view-profile/:id\" render={() => (\r\n        <p className=\"preview-unavailable\" style={{ textAlign: 'center', width: '100%', color: '#3c4852' }}>Sorry! No Preview available for this screen <br /> <span style={{ color: '#6b818b' }}>Change the screen to \"Desktop site\"</span></p>\r\n      )}></Route> : <Route exact path='/view-profile/:id' render={() => <ViewProfile id={id} />}></Route>}\r\n      <Route exact path='/login' render={() => <Home />}></Route>\r\n      <Route exact path='/register' render={() => <Home />}></Route>\r\n      <Route exact path='/tpc-technical-team' render={() => <TechnicalTeam />}></Route>\r\n      <Route path='/dashboard' render={() => <Dashboard />}></Route>\r\n      <Route exact path=\"/admin/login\" render={() => <Adminlogin />}></Route>\r\n      <Route exact path=\"/admin/dashboard\" render={() => <Admindashboard />} />\r\n      <Route exact path=\"/admin/dashboard/send-notification\" render={() => <Notifications />} />\r\n      <Route exact path=\"/admin/dashboard/studentslist\" render={() => <StudentList />} />\r\n      <Route exact path=\"/admin/dashboard/feedbacks\" render={() => <Feedback />} />\r\n      <Route exact path='/admin/dashboard/send-mail' render={() => <SendMail />} />\r\n      <Route exact path='/admin'>\r\n        <Redirect exact to='/admin/login' />\r\n      </Route>\r\n      <Route exact path=\"/\" render={() => <LandingPage />}></Route>\r\n      {/* <Route exact path=\"/alumini\" render={() => <Alumini />} /> */}\r\n      <Route path=\"*\" render={() => <PageNotFound />} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","module.exports = __webpack_public_path__ + \"static/media/notification.9b920be2.png\";","module.exports = __webpack_public_path__ + \"static/media/email.5843754e.png\";","module.exports = __webpack_public_path__ + \"static/media/customer.480e07e4.png\";","module.exports = __webpack_public_path__ + \"static/media/feedback.19e592bd.png\";"],"sourceRoot":""}